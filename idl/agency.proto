// Copyright 2020 Harri @ OP Techlab.
//

syntax = "proto3";

import "protocol.proto";

option go_package = "github.com/findy-network/findy-agent-api/grpc/ops";

package ops;

/*
Agency is a service for agency level functionality i.e. multi-tenant features
like data migrations, etc.
 */
service Agency {
  // PSMHook listens realtime stream of archived protocol state machines
  rpc PSMHook(DataHook) returns (stream AgencyStatus) {}

  // Onboard allocates cloud agent and wallet from Agency
  rpc Onboard(Onboarding) returns (OnboardResult) {}
}

message Onboarding {
  string email = 1;
}

message OnboardResult {
  bool ok = 1;
  message OkResult {
    string JWT = 1;
    string CADID = 2;
    string invitation_json = 3;
  }
  OkResult result = 2;
}

/*
AgencyStatus is message returned by PSMHook. These status messages encapsulates
protocol state machine information. The message has its own id. The protocol
specific information comes in ProtocolStatus. Outside of the actual protocol but
relevant information are current agent DID and Connection ID which arrives in
own fields.
 */
message AgencyStatus {
  string id = 1;
  agency.ProtocolStatus protocol_status = 2; // Detailed protocol information
  string DID = 3; // Agent DID if available
  string connection_id = 4; // Connection (pairwise) ID if available
}

message DataHook {
  string id = 1; // UUID to uniquely identify the hook
}

service DevOps {
  rpc Enter(Cmd) returns (CmdReturn) {}
}

message Cmd {
  enum Type {
    PING = 0;
    LOGGING = 1;
    COUNT = 2;
  }
  Type type = 1;
  oneof Request {
    string logging = 2;
  }
}

message CmdReturn {
  Cmd.Type type = 1;
  oneof Response {
    string ping = 2;
    string count = 3;
  }
}