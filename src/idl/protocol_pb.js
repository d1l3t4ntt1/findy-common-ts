// source: protocol.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.agency.Protocol', null, global);
goog.exportSymbol('proto.agency.Protocol.Attribute', null, global);
goog.exportSymbol('proto.agency.Protocol.Attrs', null, global);
goog.exportSymbol('proto.agency.Protocol.Connection', null, global);
goog.exportSymbol('proto.agency.Protocol.Issuing', null, global);
goog.exportSymbol('proto.agency.Protocol.Issuing.AttrsCase', null, global);
goog.exportSymbol('proto.agency.Protocol.Proof', null, global);
goog.exportSymbol('proto.agency.Protocol.Proof.Attr', null, global);
goog.exportSymbol('proto.agency.Protocol.ProofRequest', null, global);
goog.exportSymbol('proto.agency.Protocol.ProofRequest.AttrfmtCase', null, global);
goog.exportSymbol('proto.agency.Protocol.Role', null, global);
goog.exportSymbol('proto.agency.Protocol.StartmsgCase', null, global);
goog.exportSymbol('proto.agency.Protocol.Type', null, global);
goog.exportSymbol('proto.agency.ProtocolID', null, global);
goog.exportSymbol('proto.agency.ProtocolState', null, global);
goog.exportSymbol('proto.agency.ProtocolState.State', null, global);
goog.exportSymbol('proto.agency.ProtocolStatus', null, global);
goog.exportSymbol('proto.agency.ProtocolStatus.BasicMessage', null, global);
goog.exportSymbol('proto.agency.ProtocolStatus.Connection', null, global);
goog.exportSymbol('proto.agency.ProtocolStatus.Issue', null, global);
goog.exportSymbol('proto.agency.ProtocolStatus.StatusCase', null, global);
goog.exportSymbol('proto.agency.ProtocolStatus.TrustPing', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.Protocol = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.agency.Protocol.oneofGroups_);
};
goog.inherits(proto.agency.Protocol, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.Protocol.displayName = 'proto.agency.Protocol';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.Protocol.Attribute = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agency.Protocol.Attribute, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.Protocol.Attribute.displayName = 'proto.agency.Protocol.Attribute';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.Protocol.Attrs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.agency.Protocol.Attrs.repeatedFields_, null);
};
goog.inherits(proto.agency.Protocol.Attrs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.Protocol.Attrs.displayName = 'proto.agency.Protocol.Attrs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.Protocol.Connection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agency.Protocol.Connection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.Protocol.Connection.displayName = 'proto.agency.Protocol.Connection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.Protocol.Issuing = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.agency.Protocol.Issuing.oneofGroups_);
};
goog.inherits(proto.agency.Protocol.Issuing, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.Protocol.Issuing.displayName = 'proto.agency.Protocol.Issuing';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.Protocol.Proof = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.agency.Protocol.Proof.repeatedFields_, null);
};
goog.inherits(proto.agency.Protocol.Proof, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.Protocol.Proof.displayName = 'proto.agency.Protocol.Proof';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.Protocol.Proof.Attr = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agency.Protocol.Proof.Attr, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.Protocol.Proof.Attr.displayName = 'proto.agency.Protocol.Proof.Attr';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.Protocol.ProofRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.agency.Protocol.ProofRequest.oneofGroups_);
};
goog.inherits(proto.agency.Protocol.ProofRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.Protocol.ProofRequest.displayName = 'proto.agency.Protocol.ProofRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.ProtocolID = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agency.ProtocolID, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.ProtocolID.displayName = 'proto.agency.ProtocolID';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.ProtocolState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agency.ProtocolState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.ProtocolState.displayName = 'proto.agency.ProtocolState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.ProtocolStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.agency.ProtocolStatus.oneofGroups_);
};
goog.inherits(proto.agency.ProtocolStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.ProtocolStatus.displayName = 'proto.agency.ProtocolStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.ProtocolStatus.Connection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agency.ProtocolStatus.Connection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.ProtocolStatus.Connection.displayName = 'proto.agency.ProtocolStatus.Connection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.ProtocolStatus.Issue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.agency.ProtocolStatus.Issue.repeatedFields_, null);
};
goog.inherits(proto.agency.ProtocolStatus.Issue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.ProtocolStatus.Issue.displayName = 'proto.agency.ProtocolStatus.Issue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.ProtocolStatus.TrustPing = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agency.ProtocolStatus.TrustPing, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.ProtocolStatus.TrustPing.displayName = 'proto.agency.ProtocolStatus.TrustPing';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.ProtocolStatus.BasicMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agency.ProtocolStatus.BasicMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.ProtocolStatus.BasicMessage.displayName = 'proto.agency.ProtocolStatus.BasicMessage';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.agency.Protocol.oneofGroups_ = [[10,11,12,13]];

/**
 * @enum {number}
 */
proto.agency.Protocol.StartmsgCase = {
  STARTMSG_NOT_SET: 0,
  CONN_ATTR: 10,
  CRED_DEF: 11,
  PROOF_REQ: 12,
  BASIC_MESSAGE: 13
};

/**
 * @return {proto.agency.Protocol.StartmsgCase}
 */
proto.agency.Protocol.prototype.getStartmsgCase = function() {
  return /** @type {proto.agency.Protocol.StartmsgCase} */(jspb.Message.computeOneofCase(this, proto.agency.Protocol.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.Protocol.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.Protocol.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.Protocol} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.Protocol.toObject = function(includeInstance, msg) {
  var f, obj = {
    typeId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    role: jspb.Message.getFieldWithDefault(msg, 2, 0),
    prevThreadId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    connectionId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    connAttr: (f = msg.getConnAttr()) && proto.agency.Protocol.Connection.toObject(includeInstance, f),
    credDef: (f = msg.getCredDef()) && proto.agency.Protocol.Issuing.toObject(includeInstance, f),
    proofReq: (f = msg.getProofReq()) && proto.agency.Protocol.ProofRequest.toObject(includeInstance, f),
    basicMessage: jspb.Message.getFieldWithDefault(msg, 13, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.Protocol}
 */
proto.agency.Protocol.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.Protocol;
  return proto.agency.Protocol.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.Protocol} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.Protocol}
 */
proto.agency.Protocol.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.agency.Protocol.Type} */ (reader.readEnum());
      msg.setTypeId(value);
      break;
    case 2:
      var value = /** @type {!proto.agency.Protocol.Role} */ (reader.readEnum());
      msg.setRole(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrevThreadId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setConnectionId(value);
      break;
    case 10:
      var value = new proto.agency.Protocol.Connection;
      reader.readMessage(value,proto.agency.Protocol.Connection.deserializeBinaryFromReader);
      msg.setConnAttr(value);
      break;
    case 11:
      var value = new proto.agency.Protocol.Issuing;
      reader.readMessage(value,proto.agency.Protocol.Issuing.deserializeBinaryFromReader);
      msg.setCredDef(value);
      break;
    case 12:
      var value = new proto.agency.Protocol.ProofRequest;
      reader.readMessage(value,proto.agency.Protocol.ProofRequest.deserializeBinaryFromReader);
      msg.setProofReq(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setBasicMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.Protocol.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.Protocol.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.Protocol} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.Protocol.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTypeId();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getRole();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getPrevThreadId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getConnectionId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getConnAttr();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.agency.Protocol.Connection.serializeBinaryToWriter
    );
  }
  f = message.getCredDef();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.agency.Protocol.Issuing.serializeBinaryToWriter
    );
  }
  f = message.getProofReq();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.agency.Protocol.ProofRequest.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.agency.Protocol.Type = {
  NONE: 0,
  CONNECT: 1,
  ISSUE: 2,
  PROOF: 3,
  TRUST_PING: 4,
  BASIC_MESSAGE: 5
};

/**
 * @enum {number}
 */
proto.agency.Protocol.Role = {
  UNKNOWN: 0,
  INITIATOR: 1,
  ADDRESSEE: 2,
  RESUME: 3
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.Protocol.Attribute.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.Protocol.Attribute.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.Protocol.Attribute} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.Protocol.Attribute.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.Protocol.Attribute}
 */
proto.agency.Protocol.Attribute.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.Protocol.Attribute;
  return proto.agency.Protocol.Attribute.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.Protocol.Attribute} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.Protocol.Attribute}
 */
proto.agency.Protocol.Attribute.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.Protocol.Attribute.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.Protocol.Attribute.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.Protocol.Attribute} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.Protocol.Attribute.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.agency.Protocol.Attribute.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.Protocol.Attribute} returns this
 */
proto.agency.Protocol.Attribute.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.agency.Protocol.Attribute.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.Protocol.Attribute} returns this
 */
proto.agency.Protocol.Attribute.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.agency.Protocol.Attrs.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.Protocol.Attrs.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.Protocol.Attrs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.Protocol.Attrs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.Protocol.Attrs.toObject = function(includeInstance, msg) {
  var f, obj = {
    attrsList: jspb.Message.toObjectList(msg.getAttrsList(),
    proto.agency.Protocol.Attribute.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.Protocol.Attrs}
 */
proto.agency.Protocol.Attrs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.Protocol.Attrs;
  return proto.agency.Protocol.Attrs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.Protocol.Attrs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.Protocol.Attrs}
 */
proto.agency.Protocol.Attrs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.agency.Protocol.Attribute;
      reader.readMessage(value,proto.agency.Protocol.Attribute.deserializeBinaryFromReader);
      msg.addAttrs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.Protocol.Attrs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.Protocol.Attrs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.Protocol.Attrs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.Protocol.Attrs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAttrsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.agency.Protocol.Attribute.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Attribute attrs = 1;
 * @return {!Array<!proto.agency.Protocol.Attribute>}
 */
proto.agency.Protocol.Attrs.prototype.getAttrsList = function() {
  return /** @type{!Array<!proto.agency.Protocol.Attribute>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.agency.Protocol.Attribute, 1));
};


/**
 * @param {!Array<!proto.agency.Protocol.Attribute>} value
 * @return {!proto.agency.Protocol.Attrs} returns this
*/
proto.agency.Protocol.Attrs.prototype.setAttrsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.agency.Protocol.Attribute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.agency.Protocol.Attribute}
 */
proto.agency.Protocol.Attrs.prototype.addAttrs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.agency.Protocol.Attribute, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.agency.Protocol.Attrs} returns this
 */
proto.agency.Protocol.Attrs.prototype.clearAttrsList = function() {
  return this.setAttrsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.Protocol.Connection.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.Protocol.Connection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.Protocol.Connection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.Protocol.Connection.toObject = function(includeInstance, msg) {
  var f, obj = {
    label: jspb.Message.getFieldWithDefault(msg, 1, ""),
    invitationJson: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.Protocol.Connection}
 */
proto.agency.Protocol.Connection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.Protocol.Connection;
  return proto.agency.Protocol.Connection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.Protocol.Connection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.Protocol.Connection}
 */
proto.agency.Protocol.Connection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvitationJson(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.Protocol.Connection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.Protocol.Connection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.Protocol.Connection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.Protocol.Connection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInvitationJson();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string Label = 1;
 * @return {string}
 */
proto.agency.Protocol.Connection.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.Protocol.Connection} returns this
 */
proto.agency.Protocol.Connection.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string invitation_json = 2;
 * @return {string}
 */
proto.agency.Protocol.Connection.prototype.getInvitationJson = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.Protocol.Connection} returns this
 */
proto.agency.Protocol.Connection.prototype.setInvitationJson = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.agency.Protocol.Issuing.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.agency.Protocol.Issuing.AttrsCase = {
  ATTRS_NOT_SET: 0,
  ATTRIBUTES_JSON: 2,
  ATTRS: 3
};

/**
 * @return {proto.agency.Protocol.Issuing.AttrsCase}
 */
proto.agency.Protocol.Issuing.prototype.getAttrsCase = function() {
  return /** @type {proto.agency.Protocol.Issuing.AttrsCase} */(jspb.Message.computeOneofCase(this, proto.agency.Protocol.Issuing.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.Protocol.Issuing.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.Protocol.Issuing.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.Protocol.Issuing} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.Protocol.Issuing.toObject = function(includeInstance, msg) {
  var f, obj = {
    credDefId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    attributesJson: jspb.Message.getFieldWithDefault(msg, 2, ""),
    attrs: (f = msg.getAttrs()) && proto.agency.Protocol.Attrs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.Protocol.Issuing}
 */
proto.agency.Protocol.Issuing.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.Protocol.Issuing;
  return proto.agency.Protocol.Issuing.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.Protocol.Issuing} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.Protocol.Issuing}
 */
proto.agency.Protocol.Issuing.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredDefId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAttributesJson(value);
      break;
    case 3:
      var value = new proto.agency.Protocol.Attrs;
      reader.readMessage(value,proto.agency.Protocol.Attrs.deserializeBinaryFromReader);
      msg.setAttrs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.Protocol.Issuing.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.Protocol.Issuing.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.Protocol.Issuing} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.Protocol.Issuing.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCredDefId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAttrs();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.agency.Protocol.Attrs.serializeBinaryToWriter
    );
  }
};


/**
 * optional string cred_def_id = 1;
 * @return {string}
 */
proto.agency.Protocol.Issuing.prototype.getCredDefId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.Protocol.Issuing} returns this
 */
proto.agency.Protocol.Issuing.prototype.setCredDefId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string attributes_json = 2;
 * @return {string}
 */
proto.agency.Protocol.Issuing.prototype.getAttributesJson = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.Protocol.Issuing} returns this
 */
proto.agency.Protocol.Issuing.prototype.setAttributesJson = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.agency.Protocol.Issuing.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.agency.Protocol.Issuing} returns this
 */
proto.agency.Protocol.Issuing.prototype.clearAttributesJson = function() {
  return jspb.Message.setOneofField(this, 2, proto.agency.Protocol.Issuing.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agency.Protocol.Issuing.prototype.hasAttributesJson = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Attrs attrs = 3;
 * @return {?proto.agency.Protocol.Attrs}
 */
proto.agency.Protocol.Issuing.prototype.getAttrs = function() {
  return /** @type{?proto.agency.Protocol.Attrs} */ (
    jspb.Message.getWrapperField(this, proto.agency.Protocol.Attrs, 3));
};


/**
 * @param {?proto.agency.Protocol.Attrs|undefined} value
 * @return {!proto.agency.Protocol.Issuing} returns this
*/
proto.agency.Protocol.Issuing.prototype.setAttrs = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.agency.Protocol.Issuing.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.agency.Protocol.Issuing} returns this
 */
proto.agency.Protocol.Issuing.prototype.clearAttrs = function() {
  return this.setAttrs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agency.Protocol.Issuing.prototype.hasAttrs = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.agency.Protocol.Proof.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.Protocol.Proof.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.Protocol.Proof.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.Protocol.Proof} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.Protocol.Proof.toObject = function(includeInstance, msg) {
  var f, obj = {
    attrsList: jspb.Message.toObjectList(msg.getAttrsList(),
    proto.agency.Protocol.Proof.Attr.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.Protocol.Proof}
 */
proto.agency.Protocol.Proof.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.Protocol.Proof;
  return proto.agency.Protocol.Proof.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.Protocol.Proof} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.Protocol.Proof}
 */
proto.agency.Protocol.Proof.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.agency.Protocol.Proof.Attr;
      reader.readMessage(value,proto.agency.Protocol.Proof.Attr.deserializeBinaryFromReader);
      msg.addAttrs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.Protocol.Proof.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.Protocol.Proof.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.Protocol.Proof} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.Protocol.Proof.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAttrsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.agency.Protocol.Proof.Attr.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.Protocol.Proof.Attr.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.Protocol.Proof.Attr.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.Protocol.Proof.Attr} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.Protocol.Proof.Attr.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    credDefId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    predicate: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.Protocol.Proof.Attr}
 */
proto.agency.Protocol.Proof.Attr.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.Protocol.Proof.Attr;
  return proto.agency.Protocol.Proof.Attr.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.Protocol.Proof.Attr} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.Protocol.Proof.Attr}
 */
proto.agency.Protocol.Proof.Attr.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredDefId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPredicate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.Protocol.Proof.Attr.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.Protocol.Proof.Attr.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.Protocol.Proof.Attr} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.Protocol.Proof.Attr.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCredDefId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPredicate();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.agency.Protocol.Proof.Attr.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.Protocol.Proof.Attr} returns this
 */
proto.agency.Protocol.Proof.Attr.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string cred_def_id = 2;
 * @return {string}
 */
proto.agency.Protocol.Proof.Attr.prototype.getCredDefId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.Protocol.Proof.Attr} returns this
 */
proto.agency.Protocol.Proof.Attr.prototype.setCredDefId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string predicate = 3;
 * @return {string}
 */
proto.agency.Protocol.Proof.Attr.prototype.getPredicate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.Protocol.Proof.Attr} returns this
 */
proto.agency.Protocol.Proof.Attr.prototype.setPredicate = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated Attr attrs = 1;
 * @return {!Array<!proto.agency.Protocol.Proof.Attr>}
 */
proto.agency.Protocol.Proof.prototype.getAttrsList = function() {
  return /** @type{!Array<!proto.agency.Protocol.Proof.Attr>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.agency.Protocol.Proof.Attr, 1));
};


/**
 * @param {!Array<!proto.agency.Protocol.Proof.Attr>} value
 * @return {!proto.agency.Protocol.Proof} returns this
*/
proto.agency.Protocol.Proof.prototype.setAttrsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.agency.Protocol.Proof.Attr=} opt_value
 * @param {number=} opt_index
 * @return {!proto.agency.Protocol.Proof.Attr}
 */
proto.agency.Protocol.Proof.prototype.addAttrs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.agency.Protocol.Proof.Attr, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.agency.Protocol.Proof} returns this
 */
proto.agency.Protocol.Proof.prototype.clearAttrsList = function() {
  return this.setAttrsList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.agency.Protocol.ProofRequest.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.agency.Protocol.ProofRequest.AttrfmtCase = {
  ATTRFMT_NOT_SET: 0,
  ATTRIBUTES_JSON: 1,
  ATTRS: 2
};

/**
 * @return {proto.agency.Protocol.ProofRequest.AttrfmtCase}
 */
proto.agency.Protocol.ProofRequest.prototype.getAttrfmtCase = function() {
  return /** @type {proto.agency.Protocol.ProofRequest.AttrfmtCase} */(jspb.Message.computeOneofCase(this, proto.agency.Protocol.ProofRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.Protocol.ProofRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.Protocol.ProofRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.Protocol.ProofRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.Protocol.ProofRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    attributesJson: jspb.Message.getFieldWithDefault(msg, 1, ""),
    attrs: (f = msg.getAttrs()) && proto.agency.Protocol.Proof.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.Protocol.ProofRequest}
 */
proto.agency.Protocol.ProofRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.Protocol.ProofRequest;
  return proto.agency.Protocol.ProofRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.Protocol.ProofRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.Protocol.ProofRequest}
 */
proto.agency.Protocol.ProofRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAttributesJson(value);
      break;
    case 2:
      var value = new proto.agency.Protocol.Proof;
      reader.readMessage(value,proto.agency.Protocol.Proof.deserializeBinaryFromReader);
      msg.setAttrs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.Protocol.ProofRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.Protocol.ProofRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.Protocol.ProofRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.Protocol.ProofRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAttrs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.agency.Protocol.Proof.serializeBinaryToWriter
    );
  }
};


/**
 * optional string attributes_json = 1;
 * @return {string}
 */
proto.agency.Protocol.ProofRequest.prototype.getAttributesJson = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.Protocol.ProofRequest} returns this
 */
proto.agency.Protocol.ProofRequest.prototype.setAttributesJson = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.agency.Protocol.ProofRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.agency.Protocol.ProofRequest} returns this
 */
proto.agency.Protocol.ProofRequest.prototype.clearAttributesJson = function() {
  return jspb.Message.setOneofField(this, 1, proto.agency.Protocol.ProofRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agency.Protocol.ProofRequest.prototype.hasAttributesJson = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Proof attrs = 2;
 * @return {?proto.agency.Protocol.Proof}
 */
proto.agency.Protocol.ProofRequest.prototype.getAttrs = function() {
  return /** @type{?proto.agency.Protocol.Proof} */ (
    jspb.Message.getWrapperField(this, proto.agency.Protocol.Proof, 2));
};


/**
 * @param {?proto.agency.Protocol.Proof|undefined} value
 * @return {!proto.agency.Protocol.ProofRequest} returns this
*/
proto.agency.Protocol.ProofRequest.prototype.setAttrs = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.agency.Protocol.ProofRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.agency.Protocol.ProofRequest} returns this
 */
proto.agency.Protocol.ProofRequest.prototype.clearAttrs = function() {
  return this.setAttrs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agency.Protocol.ProofRequest.prototype.hasAttrs = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Type type_id = 1;
 * @return {!proto.agency.Protocol.Type}
 */
proto.agency.Protocol.prototype.getTypeId = function() {
  return /** @type {!proto.agency.Protocol.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.agency.Protocol.Type} value
 * @return {!proto.agency.Protocol} returns this
 */
proto.agency.Protocol.prototype.setTypeId = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional Role role = 2;
 * @return {!proto.agency.Protocol.Role}
 */
proto.agency.Protocol.prototype.getRole = function() {
  return /** @type {!proto.agency.Protocol.Role} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.agency.Protocol.Role} value
 * @return {!proto.agency.Protocol} returns this
 */
proto.agency.Protocol.prototype.setRole = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string prev_thread_id = 3;
 * @return {string}
 */
proto.agency.Protocol.prototype.getPrevThreadId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.Protocol} returns this
 */
proto.agency.Protocol.prototype.setPrevThreadId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string connection_id = 4;
 * @return {string}
 */
proto.agency.Protocol.prototype.getConnectionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.Protocol} returns this
 */
proto.agency.Protocol.prototype.setConnectionId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional Connection conn_attr = 10;
 * @return {?proto.agency.Protocol.Connection}
 */
proto.agency.Protocol.prototype.getConnAttr = function() {
  return /** @type{?proto.agency.Protocol.Connection} */ (
    jspb.Message.getWrapperField(this, proto.agency.Protocol.Connection, 10));
};


/**
 * @param {?proto.agency.Protocol.Connection|undefined} value
 * @return {!proto.agency.Protocol} returns this
*/
proto.agency.Protocol.prototype.setConnAttr = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.agency.Protocol.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.agency.Protocol} returns this
 */
proto.agency.Protocol.prototype.clearConnAttr = function() {
  return this.setConnAttr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agency.Protocol.prototype.hasConnAttr = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Issuing cred_def = 11;
 * @return {?proto.agency.Protocol.Issuing}
 */
proto.agency.Protocol.prototype.getCredDef = function() {
  return /** @type{?proto.agency.Protocol.Issuing} */ (
    jspb.Message.getWrapperField(this, proto.agency.Protocol.Issuing, 11));
};


/**
 * @param {?proto.agency.Protocol.Issuing|undefined} value
 * @return {!proto.agency.Protocol} returns this
*/
proto.agency.Protocol.prototype.setCredDef = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.agency.Protocol.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.agency.Protocol} returns this
 */
proto.agency.Protocol.prototype.clearCredDef = function() {
  return this.setCredDef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agency.Protocol.prototype.hasCredDef = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional ProofRequest proof_req = 12;
 * @return {?proto.agency.Protocol.ProofRequest}
 */
proto.agency.Protocol.prototype.getProofReq = function() {
  return /** @type{?proto.agency.Protocol.ProofRequest} */ (
    jspb.Message.getWrapperField(this, proto.agency.Protocol.ProofRequest, 12));
};


/**
 * @param {?proto.agency.Protocol.ProofRequest|undefined} value
 * @return {!proto.agency.Protocol} returns this
*/
proto.agency.Protocol.prototype.setProofReq = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.agency.Protocol.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.agency.Protocol} returns this
 */
proto.agency.Protocol.prototype.clearProofReq = function() {
  return this.setProofReq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agency.Protocol.prototype.hasProofReq = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string basic_message = 13;
 * @return {string}
 */
proto.agency.Protocol.prototype.getBasicMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.Protocol} returns this
 */
proto.agency.Protocol.prototype.setBasicMessage = function(value) {
  return jspb.Message.setOneofField(this, 13, proto.agency.Protocol.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.agency.Protocol} returns this
 */
proto.agency.Protocol.prototype.clearBasicMessage = function() {
  return jspb.Message.setOneofField(this, 13, proto.agency.Protocol.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agency.Protocol.prototype.hasBasicMessage = function() {
  return jspb.Message.getField(this, 13) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.ProtocolID.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.ProtocolID.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.ProtocolID} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.ProtocolID.toObject = function(includeInstance, msg) {
  var f, obj = {
    typeId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    role: jspb.Message.getFieldWithDefault(msg, 2, 0),
    id: jspb.Message.getFieldWithDefault(msg, 3, ""),
    notificationTime: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.ProtocolID}
 */
proto.agency.ProtocolID.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.ProtocolID;
  return proto.agency.ProtocolID.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.ProtocolID} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.ProtocolID}
 */
proto.agency.ProtocolID.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.agency.Protocol.Type} */ (reader.readEnum());
      msg.setTypeId(value);
      break;
    case 2:
      var value = /** @type {!proto.agency.Protocol.Role} */ (reader.readEnum());
      msg.setRole(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNotificationTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.ProtocolID.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.ProtocolID.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.ProtocolID} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.ProtocolID.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTypeId();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getRole();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getNotificationTime();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional Protocol.Type type_id = 1;
 * @return {!proto.agency.Protocol.Type}
 */
proto.agency.ProtocolID.prototype.getTypeId = function() {
  return /** @type {!proto.agency.Protocol.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.agency.Protocol.Type} value
 * @return {!proto.agency.ProtocolID} returns this
 */
proto.agency.ProtocolID.prototype.setTypeId = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional Protocol.Role role = 2;
 * @return {!proto.agency.Protocol.Role}
 */
proto.agency.ProtocolID.prototype.getRole = function() {
  return /** @type {!proto.agency.Protocol.Role} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.agency.Protocol.Role} value
 * @return {!proto.agency.ProtocolID} returns this
 */
proto.agency.ProtocolID.prototype.setRole = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string id = 3;
 * @return {string}
 */
proto.agency.ProtocolID.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.ProtocolID} returns this
 */
proto.agency.ProtocolID.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 notification_time = 4;
 * @return {number}
 */
proto.agency.ProtocolID.prototype.getNotificationTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.agency.ProtocolID} returns this
 */
proto.agency.ProtocolID.prototype.setNotificationTime = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.ProtocolState.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.ProtocolState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.ProtocolState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.ProtocolState.toObject = function(includeInstance, msg) {
  var f, obj = {
    protocolId: (f = msg.getProtocolId()) && proto.agency.ProtocolID.toObject(includeInstance, f),
    state: jspb.Message.getFieldWithDefault(msg, 2, 0),
    info: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.ProtocolState}
 */
proto.agency.ProtocolState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.ProtocolState;
  return proto.agency.ProtocolState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.ProtocolState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.ProtocolState}
 */
proto.agency.ProtocolState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.agency.ProtocolID;
      reader.readMessage(value,proto.agency.ProtocolID.deserializeBinaryFromReader);
      msg.setProtocolId(value);
      break;
    case 2:
      var value = /** @type {!proto.agency.ProtocolState.State} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.ProtocolState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.ProtocolState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.ProtocolState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.ProtocolState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProtocolId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.agency.ProtocolID.serializeBinaryToWriter
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getInfo();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.agency.ProtocolState.State = {
  RUNNING: 0,
  OK: 1,
  ERR: 2,
  WAIT_ACTION: 3,
  ACK: 4,
  NACK: 5
};

/**
 * optional ProtocolID protocol_id = 1;
 * @return {?proto.agency.ProtocolID}
 */
proto.agency.ProtocolState.prototype.getProtocolId = function() {
  return /** @type{?proto.agency.ProtocolID} */ (
    jspb.Message.getWrapperField(this, proto.agency.ProtocolID, 1));
};


/**
 * @param {?proto.agency.ProtocolID|undefined} value
 * @return {!proto.agency.ProtocolState} returns this
*/
proto.agency.ProtocolState.prototype.setProtocolId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.agency.ProtocolState} returns this
 */
proto.agency.ProtocolState.prototype.clearProtocolId = function() {
  return this.setProtocolId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agency.ProtocolState.prototype.hasProtocolId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional State state = 2;
 * @return {!proto.agency.ProtocolState.State}
 */
proto.agency.ProtocolState.prototype.getState = function() {
  return /** @type {!proto.agency.ProtocolState.State} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.agency.ProtocolState.State} value
 * @return {!proto.agency.ProtocolState} returns this
 */
proto.agency.ProtocolState.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string info = 3;
 * @return {string}
 */
proto.agency.ProtocolState.prototype.getInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.ProtocolState} returns this
 */
proto.agency.ProtocolState.prototype.setInfo = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.agency.ProtocolStatus.oneofGroups_ = [[10,11,12,13,14]];

/**
 * @enum {number}
 */
proto.agency.ProtocolStatus.StatusCase = {
  STATUS_NOT_SET: 0,
  CONNECTION: 10,
  ISSUE: 11,
  PROOF: 12,
  TRUST_PING: 13,
  BASIC_MESSAGE: 14
};

/**
 * @return {proto.agency.ProtocolStatus.StatusCase}
 */
proto.agency.ProtocolStatus.prototype.getStatusCase = function() {
  return /** @type {proto.agency.ProtocolStatus.StatusCase} */(jspb.Message.computeOneofCase(this, proto.agency.ProtocolStatus.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.ProtocolStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.ProtocolStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.ProtocolStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.ProtocolStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: (f = msg.getState()) && proto.agency.ProtocolState.toObject(includeInstance, f),
    timestamp: jspb.Message.getFieldWithDefault(msg, 2, 0),
    statusJson: jspb.Message.getFieldWithDefault(msg, 3, ""),
    connection: (f = msg.getConnection()) && proto.agency.ProtocolStatus.Connection.toObject(includeInstance, f),
    issue: (f = msg.getIssue()) && proto.agency.ProtocolStatus.Issue.toObject(includeInstance, f),
    proof: (f = msg.getProof()) && proto.agency.Protocol.Proof.toObject(includeInstance, f),
    trustPing: (f = msg.getTrustPing()) && proto.agency.ProtocolStatus.TrustPing.toObject(includeInstance, f),
    basicMessage: (f = msg.getBasicMessage()) && proto.agency.ProtocolStatus.BasicMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.ProtocolStatus}
 */
proto.agency.ProtocolStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.ProtocolStatus;
  return proto.agency.ProtocolStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.ProtocolStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.ProtocolStatus}
 */
proto.agency.ProtocolStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.agency.ProtocolState;
      reader.readMessage(value,proto.agency.ProtocolState.deserializeBinaryFromReader);
      msg.setState(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatusJson(value);
      break;
    case 10:
      var value = new proto.agency.ProtocolStatus.Connection;
      reader.readMessage(value,proto.agency.ProtocolStatus.Connection.deserializeBinaryFromReader);
      msg.setConnection(value);
      break;
    case 11:
      var value = new proto.agency.ProtocolStatus.Issue;
      reader.readMessage(value,proto.agency.ProtocolStatus.Issue.deserializeBinaryFromReader);
      msg.setIssue(value);
      break;
    case 12:
      var value = new proto.agency.Protocol.Proof;
      reader.readMessage(value,proto.agency.Protocol.Proof.deserializeBinaryFromReader);
      msg.setProof(value);
      break;
    case 13:
      var value = new proto.agency.ProtocolStatus.TrustPing;
      reader.readMessage(value,proto.agency.ProtocolStatus.TrustPing.deserializeBinaryFromReader);
      msg.setTrustPing(value);
      break;
    case 14:
      var value = new proto.agency.ProtocolStatus.BasicMessage;
      reader.readMessage(value,proto.agency.ProtocolStatus.BasicMessage.deserializeBinaryFromReader);
      msg.setBasicMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.ProtocolStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.ProtocolStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.ProtocolStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.ProtocolStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getState();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.agency.ProtocolState.serializeBinaryToWriter
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getStatusJson();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getConnection();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.agency.ProtocolStatus.Connection.serializeBinaryToWriter
    );
  }
  f = message.getIssue();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.agency.ProtocolStatus.Issue.serializeBinaryToWriter
    );
  }
  f = message.getProof();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.agency.Protocol.Proof.serializeBinaryToWriter
    );
  }
  f = message.getTrustPing();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.agency.ProtocolStatus.TrustPing.serializeBinaryToWriter
    );
  }
  f = message.getBasicMessage();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.agency.ProtocolStatus.BasicMessage.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.ProtocolStatus.Connection.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.ProtocolStatus.Connection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.ProtocolStatus.Connection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.ProtocolStatus.Connection.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    myDid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    theirDid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    theirEndpoint: jspb.Message.getFieldWithDefault(msg, 4, ""),
    theirLabel: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.ProtocolStatus.Connection}
 */
proto.agency.ProtocolStatus.Connection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.ProtocolStatus.Connection;
  return proto.agency.ProtocolStatus.Connection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.ProtocolStatus.Connection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.ProtocolStatus.Connection}
 */
proto.agency.ProtocolStatus.Connection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMyDid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTheirDid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTheirEndpoint(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTheirLabel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.ProtocolStatus.Connection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.ProtocolStatus.Connection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.ProtocolStatus.Connection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.ProtocolStatus.Connection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMyDid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTheirDid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTheirEndpoint();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTheirLabel();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.agency.ProtocolStatus.Connection.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.ProtocolStatus.Connection} returns this
 */
proto.agency.ProtocolStatus.Connection.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string my_did = 2;
 * @return {string}
 */
proto.agency.ProtocolStatus.Connection.prototype.getMyDid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.ProtocolStatus.Connection} returns this
 */
proto.agency.ProtocolStatus.Connection.prototype.setMyDid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string their_did = 3;
 * @return {string}
 */
proto.agency.ProtocolStatus.Connection.prototype.getTheirDid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.ProtocolStatus.Connection} returns this
 */
proto.agency.ProtocolStatus.Connection.prototype.setTheirDid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string their_endpoint = 4;
 * @return {string}
 */
proto.agency.ProtocolStatus.Connection.prototype.getTheirEndpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.ProtocolStatus.Connection} returns this
 */
proto.agency.ProtocolStatus.Connection.prototype.setTheirEndpoint = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string their_label = 5;
 * @return {string}
 */
proto.agency.ProtocolStatus.Connection.prototype.getTheirLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.ProtocolStatus.Connection} returns this
 */
proto.agency.ProtocolStatus.Connection.prototype.setTheirLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.agency.ProtocolStatus.Issue.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.ProtocolStatus.Issue.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.ProtocolStatus.Issue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.ProtocolStatus.Issue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.ProtocolStatus.Issue.toObject = function(includeInstance, msg) {
  var f, obj = {
    credDefId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    schemaId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    attrsList: jspb.Message.toObjectList(msg.getAttrsList(),
    proto.agency.Protocol.Attribute.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.ProtocolStatus.Issue}
 */
proto.agency.ProtocolStatus.Issue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.ProtocolStatus.Issue;
  return proto.agency.ProtocolStatus.Issue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.ProtocolStatus.Issue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.ProtocolStatus.Issue}
 */
proto.agency.ProtocolStatus.Issue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredDefId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchemaId(value);
      break;
    case 3:
      var value = new proto.agency.Protocol.Attribute;
      reader.readMessage(value,proto.agency.Protocol.Attribute.deserializeBinaryFromReader);
      msg.addAttrs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.ProtocolStatus.Issue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.ProtocolStatus.Issue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.ProtocolStatus.Issue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.ProtocolStatus.Issue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCredDefId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSchemaId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAttrsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.agency.Protocol.Attribute.serializeBinaryToWriter
    );
  }
};


/**
 * optional string cred_def_id = 1;
 * @return {string}
 */
proto.agency.ProtocolStatus.Issue.prototype.getCredDefId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.ProtocolStatus.Issue} returns this
 */
proto.agency.ProtocolStatus.Issue.prototype.setCredDefId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string schema_id = 2;
 * @return {string}
 */
proto.agency.ProtocolStatus.Issue.prototype.getSchemaId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.ProtocolStatus.Issue} returns this
 */
proto.agency.ProtocolStatus.Issue.prototype.setSchemaId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Protocol.Attribute attrs = 3;
 * @return {!Array<!proto.agency.Protocol.Attribute>}
 */
proto.agency.ProtocolStatus.Issue.prototype.getAttrsList = function() {
  return /** @type{!Array<!proto.agency.Protocol.Attribute>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.agency.Protocol.Attribute, 3));
};


/**
 * @param {!Array<!proto.agency.Protocol.Attribute>} value
 * @return {!proto.agency.ProtocolStatus.Issue} returns this
*/
proto.agency.ProtocolStatus.Issue.prototype.setAttrsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.agency.Protocol.Attribute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.agency.Protocol.Attribute}
 */
proto.agency.ProtocolStatus.Issue.prototype.addAttrs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.agency.Protocol.Attribute, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.agency.ProtocolStatus.Issue} returns this
 */
proto.agency.ProtocolStatus.Issue.prototype.clearAttrsList = function() {
  return this.setAttrsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.ProtocolStatus.TrustPing.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.ProtocolStatus.TrustPing.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.ProtocolStatus.TrustPing} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.ProtocolStatus.TrustPing.toObject = function(includeInstance, msg) {
  var f, obj = {
    replied: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.ProtocolStatus.TrustPing}
 */
proto.agency.ProtocolStatus.TrustPing.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.ProtocolStatus.TrustPing;
  return proto.agency.ProtocolStatus.TrustPing.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.ProtocolStatus.TrustPing} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.ProtocolStatus.TrustPing}
 */
proto.agency.ProtocolStatus.TrustPing.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReplied(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.ProtocolStatus.TrustPing.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.ProtocolStatus.TrustPing.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.ProtocolStatus.TrustPing} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.ProtocolStatus.TrustPing.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReplied();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool replied = 1;
 * @return {boolean}
 */
proto.agency.ProtocolStatus.TrustPing.prototype.getReplied = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.agency.ProtocolStatus.TrustPing} returns this
 */
proto.agency.ProtocolStatus.TrustPing.prototype.setReplied = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.ProtocolStatus.BasicMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.ProtocolStatus.BasicMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.ProtocolStatus.BasicMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.ProtocolStatus.BasicMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    content: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sentByMe: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    delivered: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    sentTimestamp: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.ProtocolStatus.BasicMessage}
 */
proto.agency.ProtocolStatus.BasicMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.ProtocolStatus.BasicMessage;
  return proto.agency.ProtocolStatus.BasicMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.ProtocolStatus.BasicMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.ProtocolStatus.BasicMessage}
 */
proto.agency.ProtocolStatus.BasicMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSentByMe(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDelivered(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSentTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.ProtocolStatus.BasicMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.ProtocolStatus.BasicMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.ProtocolStatus.BasicMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.ProtocolStatus.BasicMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSentByMe();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getDelivered();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getSentTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional string content = 1;
 * @return {string}
 */
proto.agency.ProtocolStatus.BasicMessage.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.ProtocolStatus.BasicMessage} returns this
 */
proto.agency.ProtocolStatus.BasicMessage.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool sent_by_me = 2;
 * @return {boolean}
 */
proto.agency.ProtocolStatus.BasicMessage.prototype.getSentByMe = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.agency.ProtocolStatus.BasicMessage} returns this
 */
proto.agency.ProtocolStatus.BasicMessage.prototype.setSentByMe = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool delivered = 3;
 * @return {boolean}
 */
proto.agency.ProtocolStatus.BasicMessage.prototype.getDelivered = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.agency.ProtocolStatus.BasicMessage} returns this
 */
proto.agency.ProtocolStatus.BasicMessage.prototype.setDelivered = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional int64 sent_timestamp = 4;
 * @return {number}
 */
proto.agency.ProtocolStatus.BasicMessage.prototype.getSentTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.agency.ProtocolStatus.BasicMessage} returns this
 */
proto.agency.ProtocolStatus.BasicMessage.prototype.setSentTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional ProtocolState state = 1;
 * @return {?proto.agency.ProtocolState}
 */
proto.agency.ProtocolStatus.prototype.getState = function() {
  return /** @type{?proto.agency.ProtocolState} */ (
    jspb.Message.getWrapperField(this, proto.agency.ProtocolState, 1));
};


/**
 * @param {?proto.agency.ProtocolState|undefined} value
 * @return {!proto.agency.ProtocolStatus} returns this
*/
proto.agency.ProtocolStatus.prototype.setState = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.agency.ProtocolStatus} returns this
 */
proto.agency.ProtocolStatus.prototype.clearState = function() {
  return this.setState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agency.ProtocolStatus.prototype.hasState = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 timestamp = 2;
 * @return {number}
 */
proto.agency.ProtocolStatus.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.agency.ProtocolStatus} returns this
 */
proto.agency.ProtocolStatus.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string status_json = 3;
 * @return {string}
 */
proto.agency.ProtocolStatus.prototype.getStatusJson = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.ProtocolStatus} returns this
 */
proto.agency.ProtocolStatus.prototype.setStatusJson = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Connection connection = 10;
 * @return {?proto.agency.ProtocolStatus.Connection}
 */
proto.agency.ProtocolStatus.prototype.getConnection = function() {
  return /** @type{?proto.agency.ProtocolStatus.Connection} */ (
    jspb.Message.getWrapperField(this, proto.agency.ProtocolStatus.Connection, 10));
};


/**
 * @param {?proto.agency.ProtocolStatus.Connection|undefined} value
 * @return {!proto.agency.ProtocolStatus} returns this
*/
proto.agency.ProtocolStatus.prototype.setConnection = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.agency.ProtocolStatus.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.agency.ProtocolStatus} returns this
 */
proto.agency.ProtocolStatus.prototype.clearConnection = function() {
  return this.setConnection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agency.ProtocolStatus.prototype.hasConnection = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Issue issue = 11;
 * @return {?proto.agency.ProtocolStatus.Issue}
 */
proto.agency.ProtocolStatus.prototype.getIssue = function() {
  return /** @type{?proto.agency.ProtocolStatus.Issue} */ (
    jspb.Message.getWrapperField(this, proto.agency.ProtocolStatus.Issue, 11));
};


/**
 * @param {?proto.agency.ProtocolStatus.Issue|undefined} value
 * @return {!proto.agency.ProtocolStatus} returns this
*/
proto.agency.ProtocolStatus.prototype.setIssue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.agency.ProtocolStatus.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.agency.ProtocolStatus} returns this
 */
proto.agency.ProtocolStatus.prototype.clearIssue = function() {
  return this.setIssue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agency.ProtocolStatus.prototype.hasIssue = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional Protocol.Proof proof = 12;
 * @return {?proto.agency.Protocol.Proof}
 */
proto.agency.ProtocolStatus.prototype.getProof = function() {
  return /** @type{?proto.agency.Protocol.Proof} */ (
    jspb.Message.getWrapperField(this, proto.agency.Protocol.Proof, 12));
};


/**
 * @param {?proto.agency.Protocol.Proof|undefined} value
 * @return {!proto.agency.ProtocolStatus} returns this
*/
proto.agency.ProtocolStatus.prototype.setProof = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.agency.ProtocolStatus.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.agency.ProtocolStatus} returns this
 */
proto.agency.ProtocolStatus.prototype.clearProof = function() {
  return this.setProof(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agency.ProtocolStatus.prototype.hasProof = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional TrustPing trust_ping = 13;
 * @return {?proto.agency.ProtocolStatus.TrustPing}
 */
proto.agency.ProtocolStatus.prototype.getTrustPing = function() {
  return /** @type{?proto.agency.ProtocolStatus.TrustPing} */ (
    jspb.Message.getWrapperField(this, proto.agency.ProtocolStatus.TrustPing, 13));
};


/**
 * @param {?proto.agency.ProtocolStatus.TrustPing|undefined} value
 * @return {!proto.agency.ProtocolStatus} returns this
*/
proto.agency.ProtocolStatus.prototype.setTrustPing = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.agency.ProtocolStatus.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.agency.ProtocolStatus} returns this
 */
proto.agency.ProtocolStatus.prototype.clearTrustPing = function() {
  return this.setTrustPing(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agency.ProtocolStatus.prototype.hasTrustPing = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional BasicMessage basic_message = 14;
 * @return {?proto.agency.ProtocolStatus.BasicMessage}
 */
proto.agency.ProtocolStatus.prototype.getBasicMessage = function() {
  return /** @type{?proto.agency.ProtocolStatus.BasicMessage} */ (
    jspb.Message.getWrapperField(this, proto.agency.ProtocolStatus.BasicMessage, 14));
};


/**
 * @param {?proto.agency.ProtocolStatus.BasicMessage|undefined} value
 * @return {!proto.agency.ProtocolStatus} returns this
*/
proto.agency.ProtocolStatus.prototype.setBasicMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 14, proto.agency.ProtocolStatus.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.agency.ProtocolStatus} returns this
 */
proto.agency.ProtocolStatus.prototype.clearBasicMessage = function() {
  return this.setBasicMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agency.ProtocolStatus.prototype.hasBasicMessage = function() {
  return jspb.Message.getField(this, 14) != null;
};


goog.object.extend(exports, proto.agency);
