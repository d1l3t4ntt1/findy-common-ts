// source: protocol.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.agency.v1.Protocol', null, global);
goog.exportSymbol('proto.agency.v1.Protocol.BasicMessageMsg', null, global);
goog.exportSymbol('proto.agency.v1.Protocol.DIDExchangeMsg', null, global);
goog.exportSymbol('proto.agency.v1.Protocol.IssueCredentialMsg', null, global);
goog.exportSymbol('proto.agency.v1.Protocol.IssueCredentialMsg.AttrfmtCase', null, global);
goog.exportSymbol('proto.agency.v1.Protocol.IssuingAttributes', null, global);
goog.exportSymbol('proto.agency.v1.Protocol.IssuingAttributes.Attribute', null, global);
goog.exportSymbol('proto.agency.v1.Protocol.PresentProofMsg', null, global);
goog.exportSymbol('proto.agency.v1.Protocol.PresentProofMsg.AttrfmtCase', null, global);
goog.exportSymbol('proto.agency.v1.Protocol.Proof', null, global);
goog.exportSymbol('proto.agency.v1.Protocol.Proof.Attribute', null, global);
goog.exportSymbol('proto.agency.v1.Protocol.Role', null, global);
goog.exportSymbol('proto.agency.v1.Protocol.StartmsgCase', null, global);
goog.exportSymbol('proto.agency.v1.Protocol.Type', null, global);
goog.exportSymbol('proto.agency.v1.ProtocolID', null, global);
goog.exportSymbol('proto.agency.v1.ProtocolState', null, global);
goog.exportSymbol('proto.agency.v1.ProtocolState.State', null, global);
goog.exportSymbol('proto.agency.v1.ProtocolStatus', null, global);
goog.exportSymbol('proto.agency.v1.ProtocolStatus.BasicMessageStatus', null, global);
goog.exportSymbol('proto.agency.v1.ProtocolStatus.DIDExchangeStatus', null, global);
goog.exportSymbol('proto.agency.v1.ProtocolStatus.IssueCredentialStatus', null, global);
goog.exportSymbol('proto.agency.v1.ProtocolStatus.PresentProofStatus', null, global);
goog.exportSymbol('proto.agency.v1.ProtocolStatus.StatusCase', null, global);
goog.exportSymbol('proto.agency.v1.ProtocolStatus.TrustPingStatus', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.v1.Protocol = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.agency.v1.Protocol.oneofGroups_);
};
goog.inherits(proto.agency.v1.Protocol, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.v1.Protocol.displayName = 'proto.agency.v1.Protocol';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.v1.Protocol.IssuingAttributes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.agency.v1.Protocol.IssuingAttributes.repeatedFields_, null);
};
goog.inherits(proto.agency.v1.Protocol.IssuingAttributes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.v1.Protocol.IssuingAttributes.displayName = 'proto.agency.v1.Protocol.IssuingAttributes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.v1.Protocol.IssuingAttributes.Attribute = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agency.v1.Protocol.IssuingAttributes.Attribute, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.v1.Protocol.IssuingAttributes.Attribute.displayName = 'proto.agency.v1.Protocol.IssuingAttributes.Attribute';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.v1.Protocol.DIDExchangeMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agency.v1.Protocol.DIDExchangeMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.v1.Protocol.DIDExchangeMsg.displayName = 'proto.agency.v1.Protocol.DIDExchangeMsg';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.v1.Protocol.IssueCredentialMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.agency.v1.Protocol.IssueCredentialMsg.oneofGroups_);
};
goog.inherits(proto.agency.v1.Protocol.IssueCredentialMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.v1.Protocol.IssueCredentialMsg.displayName = 'proto.agency.v1.Protocol.IssueCredentialMsg';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.v1.Protocol.Proof = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.agency.v1.Protocol.Proof.repeatedFields_, null);
};
goog.inherits(proto.agency.v1.Protocol.Proof, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.v1.Protocol.Proof.displayName = 'proto.agency.v1.Protocol.Proof';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.v1.Protocol.Proof.Attribute = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agency.v1.Protocol.Proof.Attribute, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.v1.Protocol.Proof.Attribute.displayName = 'proto.agency.v1.Protocol.Proof.Attribute';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.v1.Protocol.PresentProofMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.agency.v1.Protocol.PresentProofMsg.oneofGroups_);
};
goog.inherits(proto.agency.v1.Protocol.PresentProofMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.v1.Protocol.PresentProofMsg.displayName = 'proto.agency.v1.Protocol.PresentProofMsg';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.v1.Protocol.BasicMessageMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agency.v1.Protocol.BasicMessageMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.v1.Protocol.BasicMessageMsg.displayName = 'proto.agency.v1.Protocol.BasicMessageMsg';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.v1.ProtocolID = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agency.v1.ProtocolID, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.v1.ProtocolID.displayName = 'proto.agency.v1.ProtocolID';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.v1.ProtocolState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agency.v1.ProtocolState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.v1.ProtocolState.displayName = 'proto.agency.v1.ProtocolState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.v1.ProtocolStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.agency.v1.ProtocolStatus.oneofGroups_);
};
goog.inherits(proto.agency.v1.ProtocolStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.v1.ProtocolStatus.displayName = 'proto.agency.v1.ProtocolStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.v1.ProtocolStatus.DIDExchangeStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agency.v1.ProtocolStatus.DIDExchangeStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.v1.ProtocolStatus.DIDExchangeStatus.displayName = 'proto.agency.v1.ProtocolStatus.DIDExchangeStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.v1.ProtocolStatus.IssueCredentialStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agency.v1.ProtocolStatus.IssueCredentialStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.v1.ProtocolStatus.IssueCredentialStatus.displayName = 'proto.agency.v1.ProtocolStatus.IssueCredentialStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.v1.ProtocolStatus.PresentProofStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agency.v1.ProtocolStatus.PresentProofStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.v1.ProtocolStatus.PresentProofStatus.displayName = 'proto.agency.v1.ProtocolStatus.PresentProofStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.v1.ProtocolStatus.TrustPingStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agency.v1.ProtocolStatus.TrustPingStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.v1.ProtocolStatus.TrustPingStatus.displayName = 'proto.agency.v1.ProtocolStatus.TrustPingStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.v1.ProtocolStatus.BasicMessageStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agency.v1.ProtocolStatus.BasicMessageStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.v1.ProtocolStatus.BasicMessageStatus.displayName = 'proto.agency.v1.ProtocolStatus.BasicMessageStatus';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.agency.v1.Protocol.oneofGroups_ = [[10,11,12,13]];

/**
 * @enum {number}
 */
proto.agency.v1.Protocol.StartmsgCase = {
  STARTMSG_NOT_SET: 0,
  DID_EXCHANGE: 10,
  ISSUE_CREDENTIAL: 11,
  PRESENT_PROOF: 12,
  BASIC_MESSAGE: 13
};

/**
 * @return {proto.agency.v1.Protocol.StartmsgCase}
 */
proto.agency.v1.Protocol.prototype.getStartmsgCase = function() {
  return /** @type {proto.agency.v1.Protocol.StartmsgCase} */(jspb.Message.computeOneofCase(this, proto.agency.v1.Protocol.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.v1.Protocol.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.v1.Protocol.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.v1.Protocol} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.Protocol.toObject = function(includeInstance, msg) {
  var f, obj = {
    typeid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    role: jspb.Message.getFieldWithDefault(msg, 2, 0),
    prevThreadid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    connectionid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    didExchange: (f = msg.getDidExchange()) && proto.agency.v1.Protocol.DIDExchangeMsg.toObject(includeInstance, f),
    issueCredential: (f = msg.getIssueCredential()) && proto.agency.v1.Protocol.IssueCredentialMsg.toObject(includeInstance, f),
    presentProof: (f = msg.getPresentProof()) && proto.agency.v1.Protocol.PresentProofMsg.toObject(includeInstance, f),
    basicMessage: (f = msg.getBasicMessage()) && proto.agency.v1.Protocol.BasicMessageMsg.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.v1.Protocol}
 */
proto.agency.v1.Protocol.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.v1.Protocol;
  return proto.agency.v1.Protocol.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.v1.Protocol} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.v1.Protocol}
 */
proto.agency.v1.Protocol.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.agency.v1.Protocol.Type} */ (reader.readEnum());
      msg.setTypeid(value);
      break;
    case 2:
      var value = /** @type {!proto.agency.v1.Protocol.Role} */ (reader.readEnum());
      msg.setRole(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrevThreadid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setConnectionid(value);
      break;
    case 10:
      var value = new proto.agency.v1.Protocol.DIDExchangeMsg;
      reader.readMessage(value,proto.agency.v1.Protocol.DIDExchangeMsg.deserializeBinaryFromReader);
      msg.setDidExchange(value);
      break;
    case 11:
      var value = new proto.agency.v1.Protocol.IssueCredentialMsg;
      reader.readMessage(value,proto.agency.v1.Protocol.IssueCredentialMsg.deserializeBinaryFromReader);
      msg.setIssueCredential(value);
      break;
    case 12:
      var value = new proto.agency.v1.Protocol.PresentProofMsg;
      reader.readMessage(value,proto.agency.v1.Protocol.PresentProofMsg.deserializeBinaryFromReader);
      msg.setPresentProof(value);
      break;
    case 13:
      var value = new proto.agency.v1.Protocol.BasicMessageMsg;
      reader.readMessage(value,proto.agency.v1.Protocol.BasicMessageMsg.deserializeBinaryFromReader);
      msg.setBasicMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.v1.Protocol.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.v1.Protocol.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.v1.Protocol} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.Protocol.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTypeid();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getRole();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getPrevThreadid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getConnectionid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDidExchange();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.agency.v1.Protocol.DIDExchangeMsg.serializeBinaryToWriter
    );
  }
  f = message.getIssueCredential();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.agency.v1.Protocol.IssueCredentialMsg.serializeBinaryToWriter
    );
  }
  f = message.getPresentProof();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.agency.v1.Protocol.PresentProofMsg.serializeBinaryToWriter
    );
  }
  f = message.getBasicMessage();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.agency.v1.Protocol.BasicMessageMsg.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.agency.v1.Protocol.Type = {
  NONE: 0,
  DIDEXCHANGE: 1,
  ISSUE_CREDENTIAL: 2,
  PRESENT_PROOF: 3,
  TRUST_PING: 4,
  BASIC_MESSAGE: 5
};

/**
 * @enum {number}
 */
proto.agency.v1.Protocol.Role = {
  UNKNOWN: 0,
  INITIATOR: 1,
  ADDRESSEE: 2,
  RESUMER: 3
};


/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.agency.v1.Protocol.IssuingAttributes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.v1.Protocol.IssuingAttributes.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.v1.Protocol.IssuingAttributes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.v1.Protocol.IssuingAttributes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.Protocol.IssuingAttributes.toObject = function(includeInstance, msg) {
  var f, obj = {
    attributesList: jspb.Message.toObjectList(msg.getAttributesList(),
    proto.agency.v1.Protocol.IssuingAttributes.Attribute.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.v1.Protocol.IssuingAttributes}
 */
proto.agency.v1.Protocol.IssuingAttributes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.v1.Protocol.IssuingAttributes;
  return proto.agency.v1.Protocol.IssuingAttributes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.v1.Protocol.IssuingAttributes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.v1.Protocol.IssuingAttributes}
 */
proto.agency.v1.Protocol.IssuingAttributes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.agency.v1.Protocol.IssuingAttributes.Attribute;
      reader.readMessage(value,proto.agency.v1.Protocol.IssuingAttributes.Attribute.deserializeBinaryFromReader);
      msg.addAttributes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.v1.Protocol.IssuingAttributes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.v1.Protocol.IssuingAttributes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.v1.Protocol.IssuingAttributes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.Protocol.IssuingAttributes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAttributesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.agency.v1.Protocol.IssuingAttributes.Attribute.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.v1.Protocol.IssuingAttributes.Attribute.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.v1.Protocol.IssuingAttributes.Attribute.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.v1.Protocol.IssuingAttributes.Attribute} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.Protocol.IssuingAttributes.Attribute.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.v1.Protocol.IssuingAttributes.Attribute}
 */
proto.agency.v1.Protocol.IssuingAttributes.Attribute.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.v1.Protocol.IssuingAttributes.Attribute;
  return proto.agency.v1.Protocol.IssuingAttributes.Attribute.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.v1.Protocol.IssuingAttributes.Attribute} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.v1.Protocol.IssuingAttributes.Attribute}
 */
proto.agency.v1.Protocol.IssuingAttributes.Attribute.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.v1.Protocol.IssuingAttributes.Attribute.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.v1.Protocol.IssuingAttributes.Attribute.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.v1.Protocol.IssuingAttributes.Attribute} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.Protocol.IssuingAttributes.Attribute.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.agency.v1.Protocol.IssuingAttributes.Attribute.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.Protocol.IssuingAttributes.Attribute} returns this
 */
proto.agency.v1.Protocol.IssuingAttributes.Attribute.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.agency.v1.Protocol.IssuingAttributes.Attribute.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.Protocol.IssuingAttributes.Attribute} returns this
 */
proto.agency.v1.Protocol.IssuingAttributes.Attribute.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Attribute attributes = 1;
 * @return {!Array<!proto.agency.v1.Protocol.IssuingAttributes.Attribute>}
 */
proto.agency.v1.Protocol.IssuingAttributes.prototype.getAttributesList = function() {
  return /** @type{!Array<!proto.agency.v1.Protocol.IssuingAttributes.Attribute>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.agency.v1.Protocol.IssuingAttributes.Attribute, 1));
};


/**
 * @param {!Array<!proto.agency.v1.Protocol.IssuingAttributes.Attribute>} value
 * @return {!proto.agency.v1.Protocol.IssuingAttributes} returns this
*/
proto.agency.v1.Protocol.IssuingAttributes.prototype.setAttributesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.agency.v1.Protocol.IssuingAttributes.Attribute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.agency.v1.Protocol.IssuingAttributes.Attribute}
 */
proto.agency.v1.Protocol.IssuingAttributes.prototype.addAttributes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.agency.v1.Protocol.IssuingAttributes.Attribute, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.agency.v1.Protocol.IssuingAttributes} returns this
 */
proto.agency.v1.Protocol.IssuingAttributes.prototype.clearAttributesList = function() {
  return this.setAttributesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.v1.Protocol.DIDExchangeMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.v1.Protocol.DIDExchangeMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.v1.Protocol.DIDExchangeMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.Protocol.DIDExchangeMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    label: jspb.Message.getFieldWithDefault(msg, 1, ""),
    invitationjson: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.v1.Protocol.DIDExchangeMsg}
 */
proto.agency.v1.Protocol.DIDExchangeMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.v1.Protocol.DIDExchangeMsg;
  return proto.agency.v1.Protocol.DIDExchangeMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.v1.Protocol.DIDExchangeMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.v1.Protocol.DIDExchangeMsg}
 */
proto.agency.v1.Protocol.DIDExchangeMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvitationjson(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.v1.Protocol.DIDExchangeMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.v1.Protocol.DIDExchangeMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.v1.Protocol.DIDExchangeMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.Protocol.DIDExchangeMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInvitationjson();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string label = 1;
 * @return {string}
 */
proto.agency.v1.Protocol.DIDExchangeMsg.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.Protocol.DIDExchangeMsg} returns this
 */
proto.agency.v1.Protocol.DIDExchangeMsg.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string invitationJSON = 2;
 * @return {string}
 */
proto.agency.v1.Protocol.DIDExchangeMsg.prototype.getInvitationjson = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.Protocol.DIDExchangeMsg} returns this
 */
proto.agency.v1.Protocol.DIDExchangeMsg.prototype.setInvitationjson = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.agency.v1.Protocol.IssueCredentialMsg.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.agency.v1.Protocol.IssueCredentialMsg.AttrfmtCase = {
  ATTRFMT_NOT_SET: 0,
  ATTRIBUTESJSON: 2,
  ATTRIBUTES: 3
};

/**
 * @return {proto.agency.v1.Protocol.IssueCredentialMsg.AttrfmtCase}
 */
proto.agency.v1.Protocol.IssueCredentialMsg.prototype.getAttrfmtCase = function() {
  return /** @type {proto.agency.v1.Protocol.IssueCredentialMsg.AttrfmtCase} */(jspb.Message.computeOneofCase(this, proto.agency.v1.Protocol.IssueCredentialMsg.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.v1.Protocol.IssueCredentialMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.v1.Protocol.IssueCredentialMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.v1.Protocol.IssueCredentialMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.Protocol.IssueCredentialMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    credDefid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    attributesjson: jspb.Message.getFieldWithDefault(msg, 2, ""),
    attributes: (f = msg.getAttributes()) && proto.agency.v1.Protocol.IssuingAttributes.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.v1.Protocol.IssueCredentialMsg}
 */
proto.agency.v1.Protocol.IssueCredentialMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.v1.Protocol.IssueCredentialMsg;
  return proto.agency.v1.Protocol.IssueCredentialMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.v1.Protocol.IssueCredentialMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.v1.Protocol.IssueCredentialMsg}
 */
proto.agency.v1.Protocol.IssueCredentialMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredDefid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAttributesjson(value);
      break;
    case 3:
      var value = new proto.agency.v1.Protocol.IssuingAttributes;
      reader.readMessage(value,proto.agency.v1.Protocol.IssuingAttributes.deserializeBinaryFromReader);
      msg.setAttributes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.v1.Protocol.IssueCredentialMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.v1.Protocol.IssueCredentialMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.v1.Protocol.IssueCredentialMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.Protocol.IssueCredentialMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCredDefid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAttributes();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.agency.v1.Protocol.IssuingAttributes.serializeBinaryToWriter
    );
  }
};


/**
 * optional string cred_defID = 1;
 * @return {string}
 */
proto.agency.v1.Protocol.IssueCredentialMsg.prototype.getCredDefid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.Protocol.IssueCredentialMsg} returns this
 */
proto.agency.v1.Protocol.IssueCredentialMsg.prototype.setCredDefid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string attributesJSON = 2;
 * @return {string}
 */
proto.agency.v1.Protocol.IssueCredentialMsg.prototype.getAttributesjson = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.Protocol.IssueCredentialMsg} returns this
 */
proto.agency.v1.Protocol.IssueCredentialMsg.prototype.setAttributesjson = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.agency.v1.Protocol.IssueCredentialMsg.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.agency.v1.Protocol.IssueCredentialMsg} returns this
 */
proto.agency.v1.Protocol.IssueCredentialMsg.prototype.clearAttributesjson = function() {
  return jspb.Message.setOneofField(this, 2, proto.agency.v1.Protocol.IssueCredentialMsg.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agency.v1.Protocol.IssueCredentialMsg.prototype.hasAttributesjson = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional IssuingAttributes attributes = 3;
 * @return {?proto.agency.v1.Protocol.IssuingAttributes}
 */
proto.agency.v1.Protocol.IssueCredentialMsg.prototype.getAttributes = function() {
  return /** @type{?proto.agency.v1.Protocol.IssuingAttributes} */ (
    jspb.Message.getWrapperField(this, proto.agency.v1.Protocol.IssuingAttributes, 3));
};


/**
 * @param {?proto.agency.v1.Protocol.IssuingAttributes|undefined} value
 * @return {!proto.agency.v1.Protocol.IssueCredentialMsg} returns this
*/
proto.agency.v1.Protocol.IssueCredentialMsg.prototype.setAttributes = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.agency.v1.Protocol.IssueCredentialMsg.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.agency.v1.Protocol.IssueCredentialMsg} returns this
 */
proto.agency.v1.Protocol.IssueCredentialMsg.prototype.clearAttributes = function() {
  return this.setAttributes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agency.v1.Protocol.IssueCredentialMsg.prototype.hasAttributes = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.agency.v1.Protocol.Proof.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.v1.Protocol.Proof.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.v1.Protocol.Proof.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.v1.Protocol.Proof} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.Protocol.Proof.toObject = function(includeInstance, msg) {
  var f, obj = {
    attributesList: jspb.Message.toObjectList(msg.getAttributesList(),
    proto.agency.v1.Protocol.Proof.Attribute.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.v1.Protocol.Proof}
 */
proto.agency.v1.Protocol.Proof.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.v1.Protocol.Proof;
  return proto.agency.v1.Protocol.Proof.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.v1.Protocol.Proof} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.v1.Protocol.Proof}
 */
proto.agency.v1.Protocol.Proof.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.agency.v1.Protocol.Proof.Attribute;
      reader.readMessage(value,proto.agency.v1.Protocol.Proof.Attribute.deserializeBinaryFromReader);
      msg.addAttributes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.v1.Protocol.Proof.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.v1.Protocol.Proof.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.v1.Protocol.Proof} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.Protocol.Proof.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAttributesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.agency.v1.Protocol.Proof.Attribute.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.v1.Protocol.Proof.Attribute.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.v1.Protocol.Proof.Attribute.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.v1.Protocol.Proof.Attribute} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.Protocol.Proof.Attribute.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    credDefid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.v1.Protocol.Proof.Attribute}
 */
proto.agency.v1.Protocol.Proof.Attribute.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.v1.Protocol.Proof.Attribute;
  return proto.agency.v1.Protocol.Proof.Attribute.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.v1.Protocol.Proof.Attribute} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.v1.Protocol.Proof.Attribute}
 */
proto.agency.v1.Protocol.Proof.Attribute.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredDefid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.v1.Protocol.Proof.Attribute.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.v1.Protocol.Proof.Attribute.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.v1.Protocol.Proof.Attribute} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.Protocol.Proof.Attribute.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCredDefid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.agency.v1.Protocol.Proof.Attribute.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.Protocol.Proof.Attribute} returns this
 */
proto.agency.v1.Protocol.Proof.Attribute.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string cred_defID = 2;
 * @return {string}
 */
proto.agency.v1.Protocol.Proof.Attribute.prototype.getCredDefid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.Protocol.Proof.Attribute} returns this
 */
proto.agency.v1.Protocol.Proof.Attribute.prototype.setCredDefid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Attribute attributes = 1;
 * @return {!Array<!proto.agency.v1.Protocol.Proof.Attribute>}
 */
proto.agency.v1.Protocol.Proof.prototype.getAttributesList = function() {
  return /** @type{!Array<!proto.agency.v1.Protocol.Proof.Attribute>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.agency.v1.Protocol.Proof.Attribute, 1));
};


/**
 * @param {!Array<!proto.agency.v1.Protocol.Proof.Attribute>} value
 * @return {!proto.agency.v1.Protocol.Proof} returns this
*/
proto.agency.v1.Protocol.Proof.prototype.setAttributesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.agency.v1.Protocol.Proof.Attribute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.agency.v1.Protocol.Proof.Attribute}
 */
proto.agency.v1.Protocol.Proof.prototype.addAttributes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.agency.v1.Protocol.Proof.Attribute, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.agency.v1.Protocol.Proof} returns this
 */
proto.agency.v1.Protocol.Proof.prototype.clearAttributesList = function() {
  return this.setAttributesList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.agency.v1.Protocol.PresentProofMsg.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.agency.v1.Protocol.PresentProofMsg.AttrfmtCase = {
  ATTRFMT_NOT_SET: 0,
  ATTRIBUTESJSON: 1,
  ATTRIBUTES: 2
};

/**
 * @return {proto.agency.v1.Protocol.PresentProofMsg.AttrfmtCase}
 */
proto.agency.v1.Protocol.PresentProofMsg.prototype.getAttrfmtCase = function() {
  return /** @type {proto.agency.v1.Protocol.PresentProofMsg.AttrfmtCase} */(jspb.Message.computeOneofCase(this, proto.agency.v1.Protocol.PresentProofMsg.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.v1.Protocol.PresentProofMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.v1.Protocol.PresentProofMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.v1.Protocol.PresentProofMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.Protocol.PresentProofMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    attributesjson: jspb.Message.getFieldWithDefault(msg, 1, ""),
    attributes: (f = msg.getAttributes()) && proto.agency.v1.Protocol.Proof.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.v1.Protocol.PresentProofMsg}
 */
proto.agency.v1.Protocol.PresentProofMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.v1.Protocol.PresentProofMsg;
  return proto.agency.v1.Protocol.PresentProofMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.v1.Protocol.PresentProofMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.v1.Protocol.PresentProofMsg}
 */
proto.agency.v1.Protocol.PresentProofMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAttributesjson(value);
      break;
    case 2:
      var value = new proto.agency.v1.Protocol.Proof;
      reader.readMessage(value,proto.agency.v1.Protocol.Proof.deserializeBinaryFromReader);
      msg.setAttributes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.v1.Protocol.PresentProofMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.v1.Protocol.PresentProofMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.v1.Protocol.PresentProofMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.Protocol.PresentProofMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAttributes();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.agency.v1.Protocol.Proof.serializeBinaryToWriter
    );
  }
};


/**
 * optional string attributesJSON = 1;
 * @return {string}
 */
proto.agency.v1.Protocol.PresentProofMsg.prototype.getAttributesjson = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.Protocol.PresentProofMsg} returns this
 */
proto.agency.v1.Protocol.PresentProofMsg.prototype.setAttributesjson = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.agency.v1.Protocol.PresentProofMsg.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.agency.v1.Protocol.PresentProofMsg} returns this
 */
proto.agency.v1.Protocol.PresentProofMsg.prototype.clearAttributesjson = function() {
  return jspb.Message.setOneofField(this, 1, proto.agency.v1.Protocol.PresentProofMsg.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agency.v1.Protocol.PresentProofMsg.prototype.hasAttributesjson = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Proof attributes = 2;
 * @return {?proto.agency.v1.Protocol.Proof}
 */
proto.agency.v1.Protocol.PresentProofMsg.prototype.getAttributes = function() {
  return /** @type{?proto.agency.v1.Protocol.Proof} */ (
    jspb.Message.getWrapperField(this, proto.agency.v1.Protocol.Proof, 2));
};


/**
 * @param {?proto.agency.v1.Protocol.Proof|undefined} value
 * @return {!proto.agency.v1.Protocol.PresentProofMsg} returns this
*/
proto.agency.v1.Protocol.PresentProofMsg.prototype.setAttributes = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.agency.v1.Protocol.PresentProofMsg.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.agency.v1.Protocol.PresentProofMsg} returns this
 */
proto.agency.v1.Protocol.PresentProofMsg.prototype.clearAttributes = function() {
  return this.setAttributes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agency.v1.Protocol.PresentProofMsg.prototype.hasAttributes = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.v1.Protocol.BasicMessageMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.v1.Protocol.BasicMessageMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.v1.Protocol.BasicMessageMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.Protocol.BasicMessageMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    content: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.v1.Protocol.BasicMessageMsg}
 */
proto.agency.v1.Protocol.BasicMessageMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.v1.Protocol.BasicMessageMsg;
  return proto.agency.v1.Protocol.BasicMessageMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.v1.Protocol.BasicMessageMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.v1.Protocol.BasicMessageMsg}
 */
proto.agency.v1.Protocol.BasicMessageMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.v1.Protocol.BasicMessageMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.v1.Protocol.BasicMessageMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.v1.Protocol.BasicMessageMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.Protocol.BasicMessageMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string content = 1;
 * @return {string}
 */
proto.agency.v1.Protocol.BasicMessageMsg.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.Protocol.BasicMessageMsg} returns this
 */
proto.agency.v1.Protocol.BasicMessageMsg.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Type typeID = 1;
 * @return {!proto.agency.v1.Protocol.Type}
 */
proto.agency.v1.Protocol.prototype.getTypeid = function() {
  return /** @type {!proto.agency.v1.Protocol.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.agency.v1.Protocol.Type} value
 * @return {!proto.agency.v1.Protocol} returns this
 */
proto.agency.v1.Protocol.prototype.setTypeid = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional Role role = 2;
 * @return {!proto.agency.v1.Protocol.Role}
 */
proto.agency.v1.Protocol.prototype.getRole = function() {
  return /** @type {!proto.agency.v1.Protocol.Role} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.agency.v1.Protocol.Role} value
 * @return {!proto.agency.v1.Protocol} returns this
 */
proto.agency.v1.Protocol.prototype.setRole = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string prev_threadID = 3;
 * @return {string}
 */
proto.agency.v1.Protocol.prototype.getPrevThreadid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.Protocol} returns this
 */
proto.agency.v1.Protocol.prototype.setPrevThreadid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string connectionID = 4;
 * @return {string}
 */
proto.agency.v1.Protocol.prototype.getConnectionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.Protocol} returns this
 */
proto.agency.v1.Protocol.prototype.setConnectionid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional DIDExchangeMsg DID_exchange = 10;
 * @return {?proto.agency.v1.Protocol.DIDExchangeMsg}
 */
proto.agency.v1.Protocol.prototype.getDidExchange = function() {
  return /** @type{?proto.agency.v1.Protocol.DIDExchangeMsg} */ (
    jspb.Message.getWrapperField(this, proto.agency.v1.Protocol.DIDExchangeMsg, 10));
};


/**
 * @param {?proto.agency.v1.Protocol.DIDExchangeMsg|undefined} value
 * @return {!proto.agency.v1.Protocol} returns this
*/
proto.agency.v1.Protocol.prototype.setDidExchange = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.agency.v1.Protocol.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.agency.v1.Protocol} returns this
 */
proto.agency.v1.Protocol.prototype.clearDidExchange = function() {
  return this.setDidExchange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agency.v1.Protocol.prototype.hasDidExchange = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional IssueCredentialMsg issue_credential = 11;
 * @return {?proto.agency.v1.Protocol.IssueCredentialMsg}
 */
proto.agency.v1.Protocol.prototype.getIssueCredential = function() {
  return /** @type{?proto.agency.v1.Protocol.IssueCredentialMsg} */ (
    jspb.Message.getWrapperField(this, proto.agency.v1.Protocol.IssueCredentialMsg, 11));
};


/**
 * @param {?proto.agency.v1.Protocol.IssueCredentialMsg|undefined} value
 * @return {!proto.agency.v1.Protocol} returns this
*/
proto.agency.v1.Protocol.prototype.setIssueCredential = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.agency.v1.Protocol.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.agency.v1.Protocol} returns this
 */
proto.agency.v1.Protocol.prototype.clearIssueCredential = function() {
  return this.setIssueCredential(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agency.v1.Protocol.prototype.hasIssueCredential = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional PresentProofMsg present_proof = 12;
 * @return {?proto.agency.v1.Protocol.PresentProofMsg}
 */
proto.agency.v1.Protocol.prototype.getPresentProof = function() {
  return /** @type{?proto.agency.v1.Protocol.PresentProofMsg} */ (
    jspb.Message.getWrapperField(this, proto.agency.v1.Protocol.PresentProofMsg, 12));
};


/**
 * @param {?proto.agency.v1.Protocol.PresentProofMsg|undefined} value
 * @return {!proto.agency.v1.Protocol} returns this
*/
proto.agency.v1.Protocol.prototype.setPresentProof = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.agency.v1.Protocol.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.agency.v1.Protocol} returns this
 */
proto.agency.v1.Protocol.prototype.clearPresentProof = function() {
  return this.setPresentProof(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agency.v1.Protocol.prototype.hasPresentProof = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional BasicMessageMsg basic_message = 13;
 * @return {?proto.agency.v1.Protocol.BasicMessageMsg}
 */
proto.agency.v1.Protocol.prototype.getBasicMessage = function() {
  return /** @type{?proto.agency.v1.Protocol.BasicMessageMsg} */ (
    jspb.Message.getWrapperField(this, proto.agency.v1.Protocol.BasicMessageMsg, 13));
};


/**
 * @param {?proto.agency.v1.Protocol.BasicMessageMsg|undefined} value
 * @return {!proto.agency.v1.Protocol} returns this
*/
proto.agency.v1.Protocol.prototype.setBasicMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.agency.v1.Protocol.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.agency.v1.Protocol} returns this
 */
proto.agency.v1.Protocol.prototype.clearBasicMessage = function() {
  return this.setBasicMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agency.v1.Protocol.prototype.hasBasicMessage = function() {
  return jspb.Message.getField(this, 13) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.v1.ProtocolID.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.v1.ProtocolID.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.v1.ProtocolID} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.ProtocolID.toObject = function(includeInstance, msg) {
  var f, obj = {
    typeid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    role: jspb.Message.getFieldWithDefault(msg, 2, 0),
    id: jspb.Message.getFieldWithDefault(msg, 3, ""),
    notificationTime: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.v1.ProtocolID}
 */
proto.agency.v1.ProtocolID.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.v1.ProtocolID;
  return proto.agency.v1.ProtocolID.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.v1.ProtocolID} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.v1.ProtocolID}
 */
proto.agency.v1.ProtocolID.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.agency.v1.Protocol.Type} */ (reader.readEnum());
      msg.setTypeid(value);
      break;
    case 2:
      var value = /** @type {!proto.agency.v1.Protocol.Role} */ (reader.readEnum());
      msg.setRole(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNotificationTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.v1.ProtocolID.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.v1.ProtocolID.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.v1.ProtocolID} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.ProtocolID.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTypeid();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getRole();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getNotificationTime();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional Protocol.Type typeID = 1;
 * @return {!proto.agency.v1.Protocol.Type}
 */
proto.agency.v1.ProtocolID.prototype.getTypeid = function() {
  return /** @type {!proto.agency.v1.Protocol.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.agency.v1.Protocol.Type} value
 * @return {!proto.agency.v1.ProtocolID} returns this
 */
proto.agency.v1.ProtocolID.prototype.setTypeid = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional Protocol.Role role = 2;
 * @return {!proto.agency.v1.Protocol.Role}
 */
proto.agency.v1.ProtocolID.prototype.getRole = function() {
  return /** @type {!proto.agency.v1.Protocol.Role} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.agency.v1.Protocol.Role} value
 * @return {!proto.agency.v1.ProtocolID} returns this
 */
proto.agency.v1.ProtocolID.prototype.setRole = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string ID = 3;
 * @return {string}
 */
proto.agency.v1.ProtocolID.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.ProtocolID} returns this
 */
proto.agency.v1.ProtocolID.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 notification_time = 4;
 * @return {number}
 */
proto.agency.v1.ProtocolID.prototype.getNotificationTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.agency.v1.ProtocolID} returns this
 */
proto.agency.v1.ProtocolID.prototype.setNotificationTime = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.v1.ProtocolState.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.v1.ProtocolState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.v1.ProtocolState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.ProtocolState.toObject = function(includeInstance, msg) {
  var f, obj = {
    protocolid: (f = msg.getProtocolid()) && proto.agency.v1.ProtocolID.toObject(includeInstance, f),
    state: jspb.Message.getFieldWithDefault(msg, 2, 0),
    info: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.v1.ProtocolState}
 */
proto.agency.v1.ProtocolState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.v1.ProtocolState;
  return proto.agency.v1.ProtocolState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.v1.ProtocolState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.v1.ProtocolState}
 */
proto.agency.v1.ProtocolState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.agency.v1.ProtocolID;
      reader.readMessage(value,proto.agency.v1.ProtocolID.deserializeBinaryFromReader);
      msg.setProtocolid(value);
      break;
    case 2:
      var value = /** @type {!proto.agency.v1.ProtocolState.State} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.v1.ProtocolState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.v1.ProtocolState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.v1.ProtocolState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.ProtocolState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProtocolid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.agency.v1.ProtocolID.serializeBinaryToWriter
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getInfo();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.agency.v1.ProtocolState.State = {
  RUNNING: 0,
  OK: 1,
  ERR: 2,
  WAIT_ACTION: 3,
  ACK: 4,
  NACK: 5
};

/**
 * optional ProtocolID protocolID = 1;
 * @return {?proto.agency.v1.ProtocolID}
 */
proto.agency.v1.ProtocolState.prototype.getProtocolid = function() {
  return /** @type{?proto.agency.v1.ProtocolID} */ (
    jspb.Message.getWrapperField(this, proto.agency.v1.ProtocolID, 1));
};


/**
 * @param {?proto.agency.v1.ProtocolID|undefined} value
 * @return {!proto.agency.v1.ProtocolState} returns this
*/
proto.agency.v1.ProtocolState.prototype.setProtocolid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.agency.v1.ProtocolState} returns this
 */
proto.agency.v1.ProtocolState.prototype.clearProtocolid = function() {
  return this.setProtocolid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agency.v1.ProtocolState.prototype.hasProtocolid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional State state = 2;
 * @return {!proto.agency.v1.ProtocolState.State}
 */
proto.agency.v1.ProtocolState.prototype.getState = function() {
  return /** @type {!proto.agency.v1.ProtocolState.State} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.agency.v1.ProtocolState.State} value
 * @return {!proto.agency.v1.ProtocolState} returns this
 */
proto.agency.v1.ProtocolState.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string info = 3;
 * @return {string}
 */
proto.agency.v1.ProtocolState.prototype.getInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.ProtocolState} returns this
 */
proto.agency.v1.ProtocolState.prototype.setInfo = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.agency.v1.ProtocolStatus.oneofGroups_ = [[10,11,12,13,14]];

/**
 * @enum {number}
 */
proto.agency.v1.ProtocolStatus.StatusCase = {
  STATUS_NOT_SET: 0,
  DID_EXCHANGE: 10,
  ISSUE_CREDENTIAL: 11,
  PRESENT_PROOF: 12,
  TRUST_PING: 13,
  BASIC_MESSAGE: 14
};

/**
 * @return {proto.agency.v1.ProtocolStatus.StatusCase}
 */
proto.agency.v1.ProtocolStatus.prototype.getStatusCase = function() {
  return /** @type {proto.agency.v1.ProtocolStatus.StatusCase} */(jspb.Message.computeOneofCase(this, proto.agency.v1.ProtocolStatus.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.v1.ProtocolStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.v1.ProtocolStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.v1.ProtocolStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.ProtocolStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: (f = msg.getState()) && proto.agency.v1.ProtocolState.toObject(includeInstance, f),
    timestamp: jspb.Message.getFieldWithDefault(msg, 2, 0),
    statusjson: jspb.Message.getFieldWithDefault(msg, 3, ""),
    didExchange: (f = msg.getDidExchange()) && proto.agency.v1.ProtocolStatus.DIDExchangeStatus.toObject(includeInstance, f),
    issueCredential: (f = msg.getIssueCredential()) && proto.agency.v1.ProtocolStatus.IssueCredentialStatus.toObject(includeInstance, f),
    presentProof: (f = msg.getPresentProof()) && proto.agency.v1.ProtocolStatus.PresentProofStatus.toObject(includeInstance, f),
    trustPing: (f = msg.getTrustPing()) && proto.agency.v1.ProtocolStatus.TrustPingStatus.toObject(includeInstance, f),
    basicMessage: (f = msg.getBasicMessage()) && proto.agency.v1.ProtocolStatus.BasicMessageStatus.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.v1.ProtocolStatus}
 */
proto.agency.v1.ProtocolStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.v1.ProtocolStatus;
  return proto.agency.v1.ProtocolStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.v1.ProtocolStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.v1.ProtocolStatus}
 */
proto.agency.v1.ProtocolStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.agency.v1.ProtocolState;
      reader.readMessage(value,proto.agency.v1.ProtocolState.deserializeBinaryFromReader);
      msg.setState(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatusjson(value);
      break;
    case 10:
      var value = new proto.agency.v1.ProtocolStatus.DIDExchangeStatus;
      reader.readMessage(value,proto.agency.v1.ProtocolStatus.DIDExchangeStatus.deserializeBinaryFromReader);
      msg.setDidExchange(value);
      break;
    case 11:
      var value = new proto.agency.v1.ProtocolStatus.IssueCredentialStatus;
      reader.readMessage(value,proto.agency.v1.ProtocolStatus.IssueCredentialStatus.deserializeBinaryFromReader);
      msg.setIssueCredential(value);
      break;
    case 12:
      var value = new proto.agency.v1.ProtocolStatus.PresentProofStatus;
      reader.readMessage(value,proto.agency.v1.ProtocolStatus.PresentProofStatus.deserializeBinaryFromReader);
      msg.setPresentProof(value);
      break;
    case 13:
      var value = new proto.agency.v1.ProtocolStatus.TrustPingStatus;
      reader.readMessage(value,proto.agency.v1.ProtocolStatus.TrustPingStatus.deserializeBinaryFromReader);
      msg.setTrustPing(value);
      break;
    case 14:
      var value = new proto.agency.v1.ProtocolStatus.BasicMessageStatus;
      reader.readMessage(value,proto.agency.v1.ProtocolStatus.BasicMessageStatus.deserializeBinaryFromReader);
      msg.setBasicMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.v1.ProtocolStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.v1.ProtocolStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.v1.ProtocolStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.ProtocolStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getState();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.agency.v1.ProtocolState.serializeBinaryToWriter
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getStatusjson();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDidExchange();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.agency.v1.ProtocolStatus.DIDExchangeStatus.serializeBinaryToWriter
    );
  }
  f = message.getIssueCredential();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.agency.v1.ProtocolStatus.IssueCredentialStatus.serializeBinaryToWriter
    );
  }
  f = message.getPresentProof();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.agency.v1.ProtocolStatus.PresentProofStatus.serializeBinaryToWriter
    );
  }
  f = message.getTrustPing();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.agency.v1.ProtocolStatus.TrustPingStatus.serializeBinaryToWriter
    );
  }
  f = message.getBasicMessage();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.agency.v1.ProtocolStatus.BasicMessageStatus.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.v1.ProtocolStatus.DIDExchangeStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.v1.ProtocolStatus.DIDExchangeStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.v1.ProtocolStatus.DIDExchangeStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.ProtocolStatus.DIDExchangeStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    mydid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    theirdid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    theirEndpoint: jspb.Message.getFieldWithDefault(msg, 4, ""),
    theirLabel: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.v1.ProtocolStatus.DIDExchangeStatus}
 */
proto.agency.v1.ProtocolStatus.DIDExchangeStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.v1.ProtocolStatus.DIDExchangeStatus;
  return proto.agency.v1.ProtocolStatus.DIDExchangeStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.v1.ProtocolStatus.DIDExchangeStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.v1.ProtocolStatus.DIDExchangeStatus}
 */
proto.agency.v1.ProtocolStatus.DIDExchangeStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMydid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTheirdid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTheirEndpoint(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTheirLabel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.v1.ProtocolStatus.DIDExchangeStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.v1.ProtocolStatus.DIDExchangeStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.v1.ProtocolStatus.DIDExchangeStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.ProtocolStatus.DIDExchangeStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMydid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTheirdid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTheirEndpoint();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTheirLabel();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string ID = 1;
 * @return {string}
 */
proto.agency.v1.ProtocolStatus.DIDExchangeStatus.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.ProtocolStatus.DIDExchangeStatus} returns this
 */
proto.agency.v1.ProtocolStatus.DIDExchangeStatus.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string myDID = 2;
 * @return {string}
 */
proto.agency.v1.ProtocolStatus.DIDExchangeStatus.prototype.getMydid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.ProtocolStatus.DIDExchangeStatus} returns this
 */
proto.agency.v1.ProtocolStatus.DIDExchangeStatus.prototype.setMydid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string theirDID = 3;
 * @return {string}
 */
proto.agency.v1.ProtocolStatus.DIDExchangeStatus.prototype.getTheirdid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.ProtocolStatus.DIDExchangeStatus} returns this
 */
proto.agency.v1.ProtocolStatus.DIDExchangeStatus.prototype.setTheirdid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string their_endpoint = 4;
 * @return {string}
 */
proto.agency.v1.ProtocolStatus.DIDExchangeStatus.prototype.getTheirEndpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.ProtocolStatus.DIDExchangeStatus} returns this
 */
proto.agency.v1.ProtocolStatus.DIDExchangeStatus.prototype.setTheirEndpoint = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string their_label = 5;
 * @return {string}
 */
proto.agency.v1.ProtocolStatus.DIDExchangeStatus.prototype.getTheirLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.ProtocolStatus.DIDExchangeStatus} returns this
 */
proto.agency.v1.ProtocolStatus.DIDExchangeStatus.prototype.setTheirLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.v1.ProtocolStatus.IssueCredentialStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.v1.ProtocolStatus.IssueCredentialStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.v1.ProtocolStatus.IssueCredentialStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.ProtocolStatus.IssueCredentialStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    credDefid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    schemaid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    attributes: (f = msg.getAttributes()) && proto.agency.v1.Protocol.IssuingAttributes.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.v1.ProtocolStatus.IssueCredentialStatus}
 */
proto.agency.v1.ProtocolStatus.IssueCredentialStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.v1.ProtocolStatus.IssueCredentialStatus;
  return proto.agency.v1.ProtocolStatus.IssueCredentialStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.v1.ProtocolStatus.IssueCredentialStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.v1.ProtocolStatus.IssueCredentialStatus}
 */
proto.agency.v1.ProtocolStatus.IssueCredentialStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredDefid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchemaid(value);
      break;
    case 3:
      var value = new proto.agency.v1.Protocol.IssuingAttributes;
      reader.readMessage(value,proto.agency.v1.Protocol.IssuingAttributes.deserializeBinaryFromReader);
      msg.setAttributes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.v1.ProtocolStatus.IssueCredentialStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.v1.ProtocolStatus.IssueCredentialStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.v1.ProtocolStatus.IssueCredentialStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.ProtocolStatus.IssueCredentialStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCredDefid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSchemaid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAttributes();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.agency.v1.Protocol.IssuingAttributes.serializeBinaryToWriter
    );
  }
};


/**
 * optional string cred_defID = 1;
 * @return {string}
 */
proto.agency.v1.ProtocolStatus.IssueCredentialStatus.prototype.getCredDefid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.ProtocolStatus.IssueCredentialStatus} returns this
 */
proto.agency.v1.ProtocolStatus.IssueCredentialStatus.prototype.setCredDefid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string schemaID = 2;
 * @return {string}
 */
proto.agency.v1.ProtocolStatus.IssueCredentialStatus.prototype.getSchemaid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.ProtocolStatus.IssueCredentialStatus} returns this
 */
proto.agency.v1.ProtocolStatus.IssueCredentialStatus.prototype.setSchemaid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Protocol.IssuingAttributes attributes = 3;
 * @return {?proto.agency.v1.Protocol.IssuingAttributes}
 */
proto.agency.v1.ProtocolStatus.IssueCredentialStatus.prototype.getAttributes = function() {
  return /** @type{?proto.agency.v1.Protocol.IssuingAttributes} */ (
    jspb.Message.getWrapperField(this, proto.agency.v1.Protocol.IssuingAttributes, 3));
};


/**
 * @param {?proto.agency.v1.Protocol.IssuingAttributes|undefined} value
 * @return {!proto.agency.v1.ProtocolStatus.IssueCredentialStatus} returns this
*/
proto.agency.v1.ProtocolStatus.IssueCredentialStatus.prototype.setAttributes = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.agency.v1.ProtocolStatus.IssueCredentialStatus} returns this
 */
proto.agency.v1.ProtocolStatus.IssueCredentialStatus.prototype.clearAttributes = function() {
  return this.setAttributes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agency.v1.ProtocolStatus.IssueCredentialStatus.prototype.hasAttributes = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.v1.ProtocolStatus.PresentProofStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.v1.ProtocolStatus.PresentProofStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.v1.ProtocolStatus.PresentProofStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.ProtocolStatus.PresentProofStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    proof: (f = msg.getProof()) && proto.agency.v1.Protocol.Proof.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.v1.ProtocolStatus.PresentProofStatus}
 */
proto.agency.v1.ProtocolStatus.PresentProofStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.v1.ProtocolStatus.PresentProofStatus;
  return proto.agency.v1.ProtocolStatus.PresentProofStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.v1.ProtocolStatus.PresentProofStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.v1.ProtocolStatus.PresentProofStatus}
 */
proto.agency.v1.ProtocolStatus.PresentProofStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.agency.v1.Protocol.Proof;
      reader.readMessage(value,proto.agency.v1.Protocol.Proof.deserializeBinaryFromReader);
      msg.setProof(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.v1.ProtocolStatus.PresentProofStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.v1.ProtocolStatus.PresentProofStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.v1.ProtocolStatus.PresentProofStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.ProtocolStatus.PresentProofStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProof();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.agency.v1.Protocol.Proof.serializeBinaryToWriter
    );
  }
};


/**
 * optional Protocol.Proof proof = 1;
 * @return {?proto.agency.v1.Protocol.Proof}
 */
proto.agency.v1.ProtocolStatus.PresentProofStatus.prototype.getProof = function() {
  return /** @type{?proto.agency.v1.Protocol.Proof} */ (
    jspb.Message.getWrapperField(this, proto.agency.v1.Protocol.Proof, 1));
};


/**
 * @param {?proto.agency.v1.Protocol.Proof|undefined} value
 * @return {!proto.agency.v1.ProtocolStatus.PresentProofStatus} returns this
*/
proto.agency.v1.ProtocolStatus.PresentProofStatus.prototype.setProof = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.agency.v1.ProtocolStatus.PresentProofStatus} returns this
 */
proto.agency.v1.ProtocolStatus.PresentProofStatus.prototype.clearProof = function() {
  return this.setProof(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agency.v1.ProtocolStatus.PresentProofStatus.prototype.hasProof = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.v1.ProtocolStatus.TrustPingStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.v1.ProtocolStatus.TrustPingStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.v1.ProtocolStatus.TrustPingStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.ProtocolStatus.TrustPingStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    replied: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.v1.ProtocolStatus.TrustPingStatus}
 */
proto.agency.v1.ProtocolStatus.TrustPingStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.v1.ProtocolStatus.TrustPingStatus;
  return proto.agency.v1.ProtocolStatus.TrustPingStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.v1.ProtocolStatus.TrustPingStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.v1.ProtocolStatus.TrustPingStatus}
 */
proto.agency.v1.ProtocolStatus.TrustPingStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReplied(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.v1.ProtocolStatus.TrustPingStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.v1.ProtocolStatus.TrustPingStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.v1.ProtocolStatus.TrustPingStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.ProtocolStatus.TrustPingStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReplied();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool replied = 1;
 * @return {boolean}
 */
proto.agency.v1.ProtocolStatus.TrustPingStatus.prototype.getReplied = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.agency.v1.ProtocolStatus.TrustPingStatus} returns this
 */
proto.agency.v1.ProtocolStatus.TrustPingStatus.prototype.setReplied = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.v1.ProtocolStatus.BasicMessageStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.v1.ProtocolStatus.BasicMessageStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.v1.ProtocolStatus.BasicMessageStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.ProtocolStatus.BasicMessageStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    content: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sentByMe: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    delivered: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    sentTimestamp: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.v1.ProtocolStatus.BasicMessageStatus}
 */
proto.agency.v1.ProtocolStatus.BasicMessageStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.v1.ProtocolStatus.BasicMessageStatus;
  return proto.agency.v1.ProtocolStatus.BasicMessageStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.v1.ProtocolStatus.BasicMessageStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.v1.ProtocolStatus.BasicMessageStatus}
 */
proto.agency.v1.ProtocolStatus.BasicMessageStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSentByMe(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDelivered(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSentTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.v1.ProtocolStatus.BasicMessageStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.v1.ProtocolStatus.BasicMessageStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.v1.ProtocolStatus.BasicMessageStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.ProtocolStatus.BasicMessageStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSentByMe();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getDelivered();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getSentTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional string content = 1;
 * @return {string}
 */
proto.agency.v1.ProtocolStatus.BasicMessageStatus.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.ProtocolStatus.BasicMessageStatus} returns this
 */
proto.agency.v1.ProtocolStatus.BasicMessageStatus.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool sent_by_me = 2;
 * @return {boolean}
 */
proto.agency.v1.ProtocolStatus.BasicMessageStatus.prototype.getSentByMe = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.agency.v1.ProtocolStatus.BasicMessageStatus} returns this
 */
proto.agency.v1.ProtocolStatus.BasicMessageStatus.prototype.setSentByMe = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool delivered = 3;
 * @return {boolean}
 */
proto.agency.v1.ProtocolStatus.BasicMessageStatus.prototype.getDelivered = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.agency.v1.ProtocolStatus.BasicMessageStatus} returns this
 */
proto.agency.v1.ProtocolStatus.BasicMessageStatus.prototype.setDelivered = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional int64 sent_timestamp = 4;
 * @return {number}
 */
proto.agency.v1.ProtocolStatus.BasicMessageStatus.prototype.getSentTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.agency.v1.ProtocolStatus.BasicMessageStatus} returns this
 */
proto.agency.v1.ProtocolStatus.BasicMessageStatus.prototype.setSentTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional ProtocolState state = 1;
 * @return {?proto.agency.v1.ProtocolState}
 */
proto.agency.v1.ProtocolStatus.prototype.getState = function() {
  return /** @type{?proto.agency.v1.ProtocolState} */ (
    jspb.Message.getWrapperField(this, proto.agency.v1.ProtocolState, 1));
};


/**
 * @param {?proto.agency.v1.ProtocolState|undefined} value
 * @return {!proto.agency.v1.ProtocolStatus} returns this
*/
proto.agency.v1.ProtocolStatus.prototype.setState = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.agency.v1.ProtocolStatus} returns this
 */
proto.agency.v1.ProtocolStatus.prototype.clearState = function() {
  return this.setState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agency.v1.ProtocolStatus.prototype.hasState = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 timestamp = 2;
 * @return {number}
 */
proto.agency.v1.ProtocolStatus.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.agency.v1.ProtocolStatus} returns this
 */
proto.agency.v1.ProtocolStatus.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string statusJSON = 3;
 * @return {string}
 */
proto.agency.v1.ProtocolStatus.prototype.getStatusjson = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.ProtocolStatus} returns this
 */
proto.agency.v1.ProtocolStatus.prototype.setStatusjson = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional DIDExchangeStatus DID_exchange = 10;
 * @return {?proto.agency.v1.ProtocolStatus.DIDExchangeStatus}
 */
proto.agency.v1.ProtocolStatus.prototype.getDidExchange = function() {
  return /** @type{?proto.agency.v1.ProtocolStatus.DIDExchangeStatus} */ (
    jspb.Message.getWrapperField(this, proto.agency.v1.ProtocolStatus.DIDExchangeStatus, 10));
};


/**
 * @param {?proto.agency.v1.ProtocolStatus.DIDExchangeStatus|undefined} value
 * @return {!proto.agency.v1.ProtocolStatus} returns this
*/
proto.agency.v1.ProtocolStatus.prototype.setDidExchange = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.agency.v1.ProtocolStatus.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.agency.v1.ProtocolStatus} returns this
 */
proto.agency.v1.ProtocolStatus.prototype.clearDidExchange = function() {
  return this.setDidExchange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agency.v1.ProtocolStatus.prototype.hasDidExchange = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional IssueCredentialStatus issue_credential = 11;
 * @return {?proto.agency.v1.ProtocolStatus.IssueCredentialStatus}
 */
proto.agency.v1.ProtocolStatus.prototype.getIssueCredential = function() {
  return /** @type{?proto.agency.v1.ProtocolStatus.IssueCredentialStatus} */ (
    jspb.Message.getWrapperField(this, proto.agency.v1.ProtocolStatus.IssueCredentialStatus, 11));
};


/**
 * @param {?proto.agency.v1.ProtocolStatus.IssueCredentialStatus|undefined} value
 * @return {!proto.agency.v1.ProtocolStatus} returns this
*/
proto.agency.v1.ProtocolStatus.prototype.setIssueCredential = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.agency.v1.ProtocolStatus.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.agency.v1.ProtocolStatus} returns this
 */
proto.agency.v1.ProtocolStatus.prototype.clearIssueCredential = function() {
  return this.setIssueCredential(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agency.v1.ProtocolStatus.prototype.hasIssueCredential = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional PresentProofStatus present_proof = 12;
 * @return {?proto.agency.v1.ProtocolStatus.PresentProofStatus}
 */
proto.agency.v1.ProtocolStatus.prototype.getPresentProof = function() {
  return /** @type{?proto.agency.v1.ProtocolStatus.PresentProofStatus} */ (
    jspb.Message.getWrapperField(this, proto.agency.v1.ProtocolStatus.PresentProofStatus, 12));
};


/**
 * @param {?proto.agency.v1.ProtocolStatus.PresentProofStatus|undefined} value
 * @return {!proto.agency.v1.ProtocolStatus} returns this
*/
proto.agency.v1.ProtocolStatus.prototype.setPresentProof = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.agency.v1.ProtocolStatus.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.agency.v1.ProtocolStatus} returns this
 */
proto.agency.v1.ProtocolStatus.prototype.clearPresentProof = function() {
  return this.setPresentProof(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agency.v1.ProtocolStatus.prototype.hasPresentProof = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional TrustPingStatus trust_ping = 13;
 * @return {?proto.agency.v1.ProtocolStatus.TrustPingStatus}
 */
proto.agency.v1.ProtocolStatus.prototype.getTrustPing = function() {
  return /** @type{?proto.agency.v1.ProtocolStatus.TrustPingStatus} */ (
    jspb.Message.getWrapperField(this, proto.agency.v1.ProtocolStatus.TrustPingStatus, 13));
};


/**
 * @param {?proto.agency.v1.ProtocolStatus.TrustPingStatus|undefined} value
 * @return {!proto.agency.v1.ProtocolStatus} returns this
*/
proto.agency.v1.ProtocolStatus.prototype.setTrustPing = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.agency.v1.ProtocolStatus.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.agency.v1.ProtocolStatus} returns this
 */
proto.agency.v1.ProtocolStatus.prototype.clearTrustPing = function() {
  return this.setTrustPing(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agency.v1.ProtocolStatus.prototype.hasTrustPing = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional BasicMessageStatus basic_message = 14;
 * @return {?proto.agency.v1.ProtocolStatus.BasicMessageStatus}
 */
proto.agency.v1.ProtocolStatus.prototype.getBasicMessage = function() {
  return /** @type{?proto.agency.v1.ProtocolStatus.BasicMessageStatus} */ (
    jspb.Message.getWrapperField(this, proto.agency.v1.ProtocolStatus.BasicMessageStatus, 14));
};


/**
 * @param {?proto.agency.v1.ProtocolStatus.BasicMessageStatus|undefined} value
 * @return {!proto.agency.v1.ProtocolStatus} returns this
*/
proto.agency.v1.ProtocolStatus.prototype.setBasicMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 14, proto.agency.v1.ProtocolStatus.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.agency.v1.ProtocolStatus} returns this
 */
proto.agency.v1.ProtocolStatus.prototype.clearBasicMessage = function() {
  return this.setBasicMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agency.v1.ProtocolStatus.prototype.hasBasicMessage = function() {
  return jspb.Message.getField(this, 14) != null;
};


goog.object.extend(exports, proto.agency.v1);
