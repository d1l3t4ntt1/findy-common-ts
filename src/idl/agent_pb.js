// source: agent.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var protocol_pb = require('./protocol_pb.js');
goog.object.extend(proto, protocol_pb);
goog.exportSymbol('proto.agency.v1.AgentStatus', null, global);
goog.exportSymbol('proto.agency.v1.Answer', null, global);
goog.exportSymbol('proto.agency.v1.ClientID', null, global);
goog.exportSymbol('proto.agency.v1.CredDef', null, global);
goog.exportSymbol('proto.agency.v1.CredDefCreate', null, global);
goog.exportSymbol('proto.agency.v1.CredDefData', null, global);
goog.exportSymbol('proto.agency.v1.Invitation', null, global);
goog.exportSymbol('proto.agency.v1.InvitationBase', null, global);
goog.exportSymbol('proto.agency.v1.ModeCmd', null, global);
goog.exportSymbol('proto.agency.v1.ModeCmd.AcceptModeCmd', null, global);
goog.exportSymbol('proto.agency.v1.ModeCmd.AcceptModeCmd.Mode', null, global);
goog.exportSymbol('proto.agency.v1.ModeCmd.CmdType', null, global);
goog.exportSymbol('proto.agency.v1.ModeCmd.ControlcmdCase', null, global);
goog.exportSymbol('proto.agency.v1.Notification', null, global);
goog.exportSymbol('proto.agency.v1.Notification.Type', null, global);
goog.exportSymbol('proto.agency.v1.PingMsg', null, global);
goog.exportSymbol('proto.agency.v1.Question', null, global);
goog.exportSymbol('proto.agency.v1.Question.IssueProposeMsg', null, global);
goog.exportSymbol('proto.agency.v1.Question.ProofVerifyMsg', null, global);
goog.exportSymbol('proto.agency.v1.Question.ProofVerifyMsg.Attribute', null, global);
goog.exportSymbol('proto.agency.v1.Question.QuestionCase', null, global);
goog.exportSymbol('proto.agency.v1.Question.Type', null, global);
goog.exportSymbol('proto.agency.v1.SAImplementation', null, global);
goog.exportSymbol('proto.agency.v1.Schema', null, global);
goog.exportSymbol('proto.agency.v1.SchemaCreate', null, global);
goog.exportSymbol('proto.agency.v1.SchemaData', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.v1.ModeCmd = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.agency.v1.ModeCmd.oneofGroups_);
};
goog.inherits(proto.agency.v1.ModeCmd, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.v1.ModeCmd.displayName = 'proto.agency.v1.ModeCmd';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.v1.ModeCmd.AcceptModeCmd = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agency.v1.ModeCmd.AcceptModeCmd, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.v1.ModeCmd.AcceptModeCmd.displayName = 'proto.agency.v1.ModeCmd.AcceptModeCmd';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.v1.SchemaData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agency.v1.SchemaData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.v1.SchemaData.displayName = 'proto.agency.v1.SchemaData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.v1.CredDefData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agency.v1.CredDefData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.v1.CredDefData.displayName = 'proto.agency.v1.CredDefData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.v1.SchemaCreate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.agency.v1.SchemaCreate.repeatedFields_, null);
};
goog.inherits(proto.agency.v1.SchemaCreate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.v1.SchemaCreate.displayName = 'proto.agency.v1.SchemaCreate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.v1.Schema = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agency.v1.Schema, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.v1.Schema.displayName = 'proto.agency.v1.Schema';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.v1.CredDefCreate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agency.v1.CredDefCreate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.v1.CredDefCreate.displayName = 'proto.agency.v1.CredDefCreate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.v1.CredDef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agency.v1.CredDef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.v1.CredDef.displayName = 'proto.agency.v1.CredDef';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.v1.PingMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agency.v1.PingMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.v1.PingMsg.displayName = 'proto.agency.v1.PingMsg';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.v1.SAImplementation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agency.v1.SAImplementation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.v1.SAImplementation.displayName = 'proto.agency.v1.SAImplementation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.v1.InvitationBase = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agency.v1.InvitationBase, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.v1.InvitationBase.displayName = 'proto.agency.v1.InvitationBase';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.v1.Invitation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agency.v1.Invitation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.v1.Invitation.displayName = 'proto.agency.v1.Invitation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.v1.Answer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agency.v1.Answer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.v1.Answer.displayName = 'proto.agency.v1.Answer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.v1.ClientID = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agency.v1.ClientID, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.v1.ClientID.displayName = 'proto.agency.v1.ClientID';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.v1.AgentStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agency.v1.AgentStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.v1.AgentStatus.displayName = 'proto.agency.v1.AgentStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.v1.Notification = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agency.v1.Notification, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.v1.Notification.displayName = 'proto.agency.v1.Notification';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.v1.Question = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.agency.v1.Question.oneofGroups_);
};
goog.inherits(proto.agency.v1.Question, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.v1.Question.displayName = 'proto.agency.v1.Question';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.v1.Question.IssueProposeMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agency.v1.Question.IssueProposeMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.v1.Question.IssueProposeMsg.displayName = 'proto.agency.v1.Question.IssueProposeMsg';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.v1.Question.ProofVerifyMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.agency.v1.Question.ProofVerifyMsg.repeatedFields_, null);
};
goog.inherits(proto.agency.v1.Question.ProofVerifyMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.v1.Question.ProofVerifyMsg.displayName = 'proto.agency.v1.Question.ProofVerifyMsg';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agency.v1.Question.ProofVerifyMsg.Attribute = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agency.v1.Question.ProofVerifyMsg.Attribute, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agency.v1.Question.ProofVerifyMsg.Attribute.displayName = 'proto.agency.v1.Question.ProofVerifyMsg.Attribute';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.agency.v1.ModeCmd.oneofGroups_ = [[4]];

/**
 * @enum {number}
 */
proto.agency.v1.ModeCmd.ControlcmdCase = {
  CONTROLCMD_NOT_SET: 0,
  ACCEPT_MODE: 4
};

/**
 * @return {proto.agency.v1.ModeCmd.ControlcmdCase}
 */
proto.agency.v1.ModeCmd.prototype.getControlcmdCase = function() {
  return /** @type {proto.agency.v1.ModeCmd.ControlcmdCase} */(jspb.Message.computeOneofCase(this, proto.agency.v1.ModeCmd.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.v1.ModeCmd.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.v1.ModeCmd.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.v1.ModeCmd} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.ModeCmd.toObject = function(includeInstance, msg) {
  var f, obj = {
    typeid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    isInput: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    info: jspb.Message.getFieldWithDefault(msg, 3, ""),
    acceptMode: (f = msg.getAcceptMode()) && proto.agency.v1.ModeCmd.AcceptModeCmd.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.v1.ModeCmd}
 */
proto.agency.v1.ModeCmd.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.v1.ModeCmd;
  return proto.agency.v1.ModeCmd.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.v1.ModeCmd} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.v1.ModeCmd}
 */
proto.agency.v1.ModeCmd.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.agency.v1.ModeCmd.CmdType} */ (reader.readEnum());
      msg.setTypeid(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsInput(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setInfo(value);
      break;
    case 4:
      var value = new proto.agency.v1.ModeCmd.AcceptModeCmd;
      reader.readMessage(value,proto.agency.v1.ModeCmd.AcceptModeCmd.deserializeBinaryFromReader);
      msg.setAcceptMode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.v1.ModeCmd.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.v1.ModeCmd.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.v1.ModeCmd} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.ModeCmd.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTypeid();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getIsInput();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getInfo();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAcceptMode();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.agency.v1.ModeCmd.AcceptModeCmd.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.agency.v1.ModeCmd.CmdType = {
  NONE: 0,
  ACCEPT_MODE: 1
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.v1.ModeCmd.AcceptModeCmd.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.v1.ModeCmd.AcceptModeCmd.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.v1.ModeCmd.AcceptModeCmd} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.ModeCmd.AcceptModeCmd.toObject = function(includeInstance, msg) {
  var f, obj = {
    mode: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.v1.ModeCmd.AcceptModeCmd}
 */
proto.agency.v1.ModeCmd.AcceptModeCmd.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.v1.ModeCmd.AcceptModeCmd;
  return proto.agency.v1.ModeCmd.AcceptModeCmd.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.v1.ModeCmd.AcceptModeCmd} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.v1.ModeCmd.AcceptModeCmd}
 */
proto.agency.v1.ModeCmd.AcceptModeCmd.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.agency.v1.ModeCmd.AcceptModeCmd.Mode} */ (reader.readEnum());
      msg.setMode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.v1.ModeCmd.AcceptModeCmd.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.v1.ModeCmd.AcceptModeCmd.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.v1.ModeCmd.AcceptModeCmd} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.ModeCmd.AcceptModeCmd.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMode();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.agency.v1.ModeCmd.AcceptModeCmd.Mode = {
  DEFAULT: 0,
  AUTO_ACCEPT: 1,
  GRPC_CONTROL: 2
};

/**
 * optional Mode mode = 1;
 * @return {!proto.agency.v1.ModeCmd.AcceptModeCmd.Mode}
 */
proto.agency.v1.ModeCmd.AcceptModeCmd.prototype.getMode = function() {
  return /** @type {!proto.agency.v1.ModeCmd.AcceptModeCmd.Mode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.agency.v1.ModeCmd.AcceptModeCmd.Mode} value
 * @return {!proto.agency.v1.ModeCmd.AcceptModeCmd} returns this
 */
proto.agency.v1.ModeCmd.AcceptModeCmd.prototype.setMode = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional CmdType typeID = 1;
 * @return {!proto.agency.v1.ModeCmd.CmdType}
 */
proto.agency.v1.ModeCmd.prototype.getTypeid = function() {
  return /** @type {!proto.agency.v1.ModeCmd.CmdType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.agency.v1.ModeCmd.CmdType} value
 * @return {!proto.agency.v1.ModeCmd} returns this
 */
proto.agency.v1.ModeCmd.prototype.setTypeid = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional bool is_input = 2;
 * @return {boolean}
 */
proto.agency.v1.ModeCmd.prototype.getIsInput = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.agency.v1.ModeCmd} returns this
 */
proto.agency.v1.ModeCmd.prototype.setIsInput = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string info = 3;
 * @return {string}
 */
proto.agency.v1.ModeCmd.prototype.getInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.ModeCmd} returns this
 */
proto.agency.v1.ModeCmd.prototype.setInfo = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional AcceptModeCmd accept_mode = 4;
 * @return {?proto.agency.v1.ModeCmd.AcceptModeCmd}
 */
proto.agency.v1.ModeCmd.prototype.getAcceptMode = function() {
  return /** @type{?proto.agency.v1.ModeCmd.AcceptModeCmd} */ (
    jspb.Message.getWrapperField(this, proto.agency.v1.ModeCmd.AcceptModeCmd, 4));
};


/**
 * @param {?proto.agency.v1.ModeCmd.AcceptModeCmd|undefined} value
 * @return {!proto.agency.v1.ModeCmd} returns this
*/
proto.agency.v1.ModeCmd.prototype.setAcceptMode = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.agency.v1.ModeCmd.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.agency.v1.ModeCmd} returns this
 */
proto.agency.v1.ModeCmd.prototype.clearAcceptMode = function() {
  return this.setAcceptMode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agency.v1.ModeCmd.prototype.hasAcceptMode = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.v1.SchemaData.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.v1.SchemaData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.v1.SchemaData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.SchemaData.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    data: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.v1.SchemaData}
 */
proto.agency.v1.SchemaData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.v1.SchemaData;
  return proto.agency.v1.SchemaData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.v1.SchemaData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.v1.SchemaData}
 */
proto.agency.v1.SchemaData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.v1.SchemaData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.v1.SchemaData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.v1.SchemaData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.SchemaData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getData();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string ID = 1;
 * @return {string}
 */
proto.agency.v1.SchemaData.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.SchemaData} returns this
 */
proto.agency.v1.SchemaData.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string data = 2;
 * @return {string}
 */
proto.agency.v1.SchemaData.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.SchemaData} returns this
 */
proto.agency.v1.SchemaData.prototype.setData = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.v1.CredDefData.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.v1.CredDefData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.v1.CredDefData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.CredDefData.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    data: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.v1.CredDefData}
 */
proto.agency.v1.CredDefData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.v1.CredDefData;
  return proto.agency.v1.CredDefData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.v1.CredDefData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.v1.CredDefData}
 */
proto.agency.v1.CredDefData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.v1.CredDefData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.v1.CredDefData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.v1.CredDefData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.CredDefData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getData();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string ID = 1;
 * @return {string}
 */
proto.agency.v1.CredDefData.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.CredDefData} returns this
 */
proto.agency.v1.CredDefData.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string data = 2;
 * @return {string}
 */
proto.agency.v1.CredDefData.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.CredDefData} returns this
 */
proto.agency.v1.CredDefData.prototype.setData = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.agency.v1.SchemaCreate.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.v1.SchemaCreate.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.v1.SchemaCreate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.v1.SchemaCreate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.SchemaCreate.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    version: jspb.Message.getFieldWithDefault(msg, 2, ""),
    attributesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.v1.SchemaCreate}
 */
proto.agency.v1.SchemaCreate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.v1.SchemaCreate;
  return proto.agency.v1.SchemaCreate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.v1.SchemaCreate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.v1.SchemaCreate}
 */
proto.agency.v1.SchemaCreate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addAttributes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.v1.SchemaCreate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.v1.SchemaCreate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.v1.SchemaCreate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.SchemaCreate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAttributesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.agency.v1.SchemaCreate.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.SchemaCreate} returns this
 */
proto.agency.v1.SchemaCreate.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string version = 2;
 * @return {string}
 */
proto.agency.v1.SchemaCreate.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.SchemaCreate} returns this
 */
proto.agency.v1.SchemaCreate.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string attributes = 3;
 * @return {!Array<string>}
 */
proto.agency.v1.SchemaCreate.prototype.getAttributesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.agency.v1.SchemaCreate} returns this
 */
proto.agency.v1.SchemaCreate.prototype.setAttributesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.agency.v1.SchemaCreate} returns this
 */
proto.agency.v1.SchemaCreate.prototype.addAttributes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.agency.v1.SchemaCreate} returns this
 */
proto.agency.v1.SchemaCreate.prototype.clearAttributesList = function() {
  return this.setAttributesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.v1.Schema.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.v1.Schema.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.v1.Schema} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.Schema.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.v1.Schema}
 */
proto.agency.v1.Schema.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.v1.Schema;
  return proto.agency.v1.Schema.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.v1.Schema} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.v1.Schema}
 */
proto.agency.v1.Schema.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.v1.Schema.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.v1.Schema.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.v1.Schema} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.Schema.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string ID = 1;
 * @return {string}
 */
proto.agency.v1.Schema.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.Schema} returns this
 */
proto.agency.v1.Schema.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.v1.CredDefCreate.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.v1.CredDefCreate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.v1.CredDefCreate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.CredDefCreate.toObject = function(includeInstance, msg) {
  var f, obj = {
    schemaid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tag: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.v1.CredDefCreate}
 */
proto.agency.v1.CredDefCreate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.v1.CredDefCreate;
  return proto.agency.v1.CredDefCreate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.v1.CredDefCreate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.v1.CredDefCreate}
 */
proto.agency.v1.CredDefCreate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchemaid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTag(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.v1.CredDefCreate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.v1.CredDefCreate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.v1.CredDefCreate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.CredDefCreate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchemaid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTag();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string schemaID = 1;
 * @return {string}
 */
proto.agency.v1.CredDefCreate.prototype.getSchemaid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.CredDefCreate} returns this
 */
proto.agency.v1.CredDefCreate.prototype.setSchemaid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string tag = 2;
 * @return {string}
 */
proto.agency.v1.CredDefCreate.prototype.getTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.CredDefCreate} returns this
 */
proto.agency.v1.CredDefCreate.prototype.setTag = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.v1.CredDef.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.v1.CredDef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.v1.CredDef} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.CredDef.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.v1.CredDef}
 */
proto.agency.v1.CredDef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.v1.CredDef;
  return proto.agency.v1.CredDef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.v1.CredDef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.v1.CredDef}
 */
proto.agency.v1.CredDef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.v1.CredDef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.v1.CredDef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.v1.CredDef} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.CredDef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string ID = 1;
 * @return {string}
 */
proto.agency.v1.CredDef.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.CredDef} returns this
 */
proto.agency.v1.CredDef.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.v1.PingMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.v1.PingMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.v1.PingMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.PingMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pingController: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.v1.PingMsg}
 */
proto.agency.v1.PingMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.v1.PingMsg;
  return proto.agency.v1.PingMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.v1.PingMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.v1.PingMsg}
 */
proto.agency.v1.PingMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPingController(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.v1.PingMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.v1.PingMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.v1.PingMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.PingMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPingController();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional int32 ID = 1;
 * @return {number}
 */
proto.agency.v1.PingMsg.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.agency.v1.PingMsg} returns this
 */
proto.agency.v1.PingMsg.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool ping_controller = 2;
 * @return {boolean}
 */
proto.agency.v1.PingMsg.prototype.getPingController = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.agency.v1.PingMsg} returns this
 */
proto.agency.v1.PingMsg.prototype.setPingController = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.v1.SAImplementation.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.v1.SAImplementation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.v1.SAImplementation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.SAImplementation.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    endpoint: jspb.Message.getFieldWithDefault(msg, 2, ""),
    key: jspb.Message.getFieldWithDefault(msg, 3, ""),
    persistent: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.v1.SAImplementation}
 */
proto.agency.v1.SAImplementation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.v1.SAImplementation;
  return proto.agency.v1.SAImplementation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.v1.SAImplementation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.v1.SAImplementation}
 */
proto.agency.v1.SAImplementation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndpoint(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPersistent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.v1.SAImplementation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.v1.SAImplementation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.v1.SAImplementation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.SAImplementation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEndpoint();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPersistent();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string ID = 1;
 * @return {string}
 */
proto.agency.v1.SAImplementation.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.SAImplementation} returns this
 */
proto.agency.v1.SAImplementation.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string endpoint = 2;
 * @return {string}
 */
proto.agency.v1.SAImplementation.prototype.getEndpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.SAImplementation} returns this
 */
proto.agency.v1.SAImplementation.prototype.setEndpoint = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string key = 3;
 * @return {string}
 */
proto.agency.v1.SAImplementation.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.SAImplementation} returns this
 */
proto.agency.v1.SAImplementation.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool persistent = 4;
 * @return {boolean}
 */
proto.agency.v1.SAImplementation.prototype.getPersistent = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.agency.v1.SAImplementation} returns this
 */
proto.agency.v1.SAImplementation.prototype.setPersistent = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.v1.InvitationBase.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.v1.InvitationBase.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.v1.InvitationBase} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.InvitationBase.toObject = function(includeInstance, msg) {
  var f, obj = {
    label: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, ""),
    expiration: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.v1.InvitationBase}
 */
proto.agency.v1.InvitationBase.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.v1.InvitationBase;
  return proto.agency.v1.InvitationBase.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.v1.InvitationBase} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.v1.InvitationBase}
 */
proto.agency.v1.InvitationBase.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExpiration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.v1.InvitationBase.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.v1.InvitationBase.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.v1.InvitationBase} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.InvitationBase.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getExpiration();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional string label = 1;
 * @return {string}
 */
proto.agency.v1.InvitationBase.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.InvitationBase} returns this
 */
proto.agency.v1.InvitationBase.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ID = 2;
 * @return {string}
 */
proto.agency.v1.InvitationBase.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.InvitationBase} returns this
 */
proto.agency.v1.InvitationBase.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 expiration = 3;
 * @return {number}
 */
proto.agency.v1.InvitationBase.prototype.getExpiration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.agency.v1.InvitationBase} returns this
 */
proto.agency.v1.InvitationBase.prototype.setExpiration = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.v1.Invitation.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.v1.Invitation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.v1.Invitation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.Invitation.toObject = function(includeInstance, msg) {
  var f, obj = {
    json: jspb.Message.getFieldWithDefault(msg, 1, ""),
    url: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.v1.Invitation}
 */
proto.agency.v1.Invitation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.v1.Invitation;
  return proto.agency.v1.Invitation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.v1.Invitation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.v1.Invitation}
 */
proto.agency.v1.Invitation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setJson(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.v1.Invitation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.v1.Invitation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.v1.Invitation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.Invitation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getJson();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string JSON = 1;
 * @return {string}
 */
proto.agency.v1.Invitation.prototype.getJson = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.Invitation} returns this
 */
proto.agency.v1.Invitation.prototype.setJson = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string URL = 2;
 * @return {string}
 */
proto.agency.v1.Invitation.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.Invitation} returns this
 */
proto.agency.v1.Invitation.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.v1.Answer.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.v1.Answer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.v1.Answer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.Answer.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    clientid: (f = msg.getClientid()) && proto.agency.v1.ClientID.toObject(includeInstance, f),
    ack: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    info: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.v1.Answer}
 */
proto.agency.v1.Answer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.v1.Answer;
  return proto.agency.v1.Answer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.v1.Answer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.v1.Answer}
 */
proto.agency.v1.Answer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.agency.v1.ClientID;
      reader.readMessage(value,proto.agency.v1.ClientID.deserializeBinaryFromReader);
      msg.setClientid(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAck(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.v1.Answer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.v1.Answer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.v1.Answer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.Answer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClientid();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.agency.v1.ClientID.serializeBinaryToWriter
    );
  }
  f = message.getAck();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getInfo();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string ID = 1;
 * @return {string}
 */
proto.agency.v1.Answer.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.Answer} returns this
 */
proto.agency.v1.Answer.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ClientID clientID = 2;
 * @return {?proto.agency.v1.ClientID}
 */
proto.agency.v1.Answer.prototype.getClientid = function() {
  return /** @type{?proto.agency.v1.ClientID} */ (
    jspb.Message.getWrapperField(this, proto.agency.v1.ClientID, 2));
};


/**
 * @param {?proto.agency.v1.ClientID|undefined} value
 * @return {!proto.agency.v1.Answer} returns this
*/
proto.agency.v1.Answer.prototype.setClientid = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.agency.v1.Answer} returns this
 */
proto.agency.v1.Answer.prototype.clearClientid = function() {
  return this.setClientid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agency.v1.Answer.prototype.hasClientid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool ack = 3;
 * @return {boolean}
 */
proto.agency.v1.Answer.prototype.getAck = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.agency.v1.Answer} returns this
 */
proto.agency.v1.Answer.prototype.setAck = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string info = 4;
 * @return {string}
 */
proto.agency.v1.Answer.prototype.getInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.Answer} returns this
 */
proto.agency.v1.Answer.prototype.setInfo = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.v1.ClientID.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.v1.ClientID.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.v1.ClientID} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.ClientID.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.v1.ClientID}
 */
proto.agency.v1.ClientID.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.v1.ClientID;
  return proto.agency.v1.ClientID.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.v1.ClientID} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.v1.ClientID}
 */
proto.agency.v1.ClientID.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.v1.ClientID.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.v1.ClientID.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.v1.ClientID} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.ClientID.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string ID = 1;
 * @return {string}
 */
proto.agency.v1.ClientID.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.ClientID} returns this
 */
proto.agency.v1.ClientID.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.v1.AgentStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.v1.AgentStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.v1.AgentStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.AgentStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientid: (f = msg.getClientid()) && proto.agency.v1.ClientID.toObject(includeInstance, f),
    notification: (f = msg.getNotification()) && proto.agency.v1.Notification.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.v1.AgentStatus}
 */
proto.agency.v1.AgentStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.v1.AgentStatus;
  return proto.agency.v1.AgentStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.v1.AgentStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.v1.AgentStatus}
 */
proto.agency.v1.AgentStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.agency.v1.ClientID;
      reader.readMessage(value,proto.agency.v1.ClientID.deserializeBinaryFromReader);
      msg.setClientid(value);
      break;
    case 3:
      var value = new proto.agency.v1.Notification;
      reader.readMessage(value,proto.agency.v1.Notification.deserializeBinaryFromReader);
      msg.setNotification(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.v1.AgentStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.v1.AgentStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.v1.AgentStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.AgentStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.agency.v1.ClientID.serializeBinaryToWriter
    );
  }
  f = message.getNotification();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.agency.v1.Notification.serializeBinaryToWriter
    );
  }
};


/**
 * optional ClientID clientID = 1;
 * @return {?proto.agency.v1.ClientID}
 */
proto.agency.v1.AgentStatus.prototype.getClientid = function() {
  return /** @type{?proto.agency.v1.ClientID} */ (
    jspb.Message.getWrapperField(this, proto.agency.v1.ClientID, 1));
};


/**
 * @param {?proto.agency.v1.ClientID|undefined} value
 * @return {!proto.agency.v1.AgentStatus} returns this
*/
proto.agency.v1.AgentStatus.prototype.setClientid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.agency.v1.AgentStatus} returns this
 */
proto.agency.v1.AgentStatus.prototype.clearClientid = function() {
  return this.setClientid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agency.v1.AgentStatus.prototype.hasClientid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Notification notification = 3;
 * @return {?proto.agency.v1.Notification}
 */
proto.agency.v1.AgentStatus.prototype.getNotification = function() {
  return /** @type{?proto.agency.v1.Notification} */ (
    jspb.Message.getWrapperField(this, proto.agency.v1.Notification, 3));
};


/**
 * @param {?proto.agency.v1.Notification|undefined} value
 * @return {!proto.agency.v1.AgentStatus} returns this
*/
proto.agency.v1.AgentStatus.prototype.setNotification = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.agency.v1.AgentStatus} returns this
 */
proto.agency.v1.AgentStatus.prototype.clearNotification = function() {
  return this.setNotification(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agency.v1.AgentStatus.prototype.hasNotification = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.v1.Notification.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.v1.Notification.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.v1.Notification} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.Notification.toObject = function(includeInstance, msg) {
  var f, obj = {
    typeid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    id: jspb.Message.getFieldWithDefault(msg, 2, ""),
    connectionid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    protocolid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    protocolFamily: jspb.Message.getFieldWithDefault(msg, 5, ""),
    timestamp: jspb.Message.getFieldWithDefault(msg, 6, 0),
    protocolType: jspb.Message.getFieldWithDefault(msg, 7, 0),
    role: jspb.Message.getFieldWithDefault(msg, 8, 0),
    pid: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.v1.Notification}
 */
proto.agency.v1.Notification.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.v1.Notification;
  return proto.agency.v1.Notification.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.v1.Notification} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.v1.Notification}
 */
proto.agency.v1.Notification.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.agency.v1.Notification.Type} */ (reader.readEnum());
      msg.setTypeid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setConnectionid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setProtocolid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setProtocolFamily(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 7:
      var value = /** @type {!proto.agency.v1.Protocol.Type} */ (reader.readEnum());
      msg.setProtocolType(value);
      break;
    case 8:
      var value = /** @type {!proto.agency.v1.Protocol.Role} */ (reader.readEnum());
      msg.setRole(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setPid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.v1.Notification.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.v1.Notification.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.v1.Notification} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.Notification.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTypeid();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getConnectionid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getProtocolid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getProtocolFamily();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getProtocolType();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getRole();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getPid();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.agency.v1.Notification.Type = {
  NONE: 0,
  KEEPALIVE: 1,
  STATUS_UPDATE: 2,
  PROTOCOL_PAUSED: 3
};

/**
 * optional Type typeID = 1;
 * @return {!proto.agency.v1.Notification.Type}
 */
proto.agency.v1.Notification.prototype.getTypeid = function() {
  return /** @type {!proto.agency.v1.Notification.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.agency.v1.Notification.Type} value
 * @return {!proto.agency.v1.Notification} returns this
 */
proto.agency.v1.Notification.prototype.setTypeid = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string ID = 2;
 * @return {string}
 */
proto.agency.v1.Notification.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.Notification} returns this
 */
proto.agency.v1.Notification.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string connectionID = 3;
 * @return {string}
 */
proto.agency.v1.Notification.prototype.getConnectionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.Notification} returns this
 */
proto.agency.v1.Notification.prototype.setConnectionid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string protocolID = 4;
 * @return {string}
 */
proto.agency.v1.Notification.prototype.getProtocolid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.Notification} returns this
 */
proto.agency.v1.Notification.prototype.setProtocolid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string protocol_family = 5;
 * @return {string}
 */
proto.agency.v1.Notification.prototype.getProtocolFamily = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.Notification} returns this
 */
proto.agency.v1.Notification.prototype.setProtocolFamily = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int64 timestamp = 6;
 * @return {number}
 */
proto.agency.v1.Notification.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.agency.v1.Notification} returns this
 */
proto.agency.v1.Notification.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional Protocol.Type protocol_type = 7;
 * @return {!proto.agency.v1.Protocol.Type}
 */
proto.agency.v1.Notification.prototype.getProtocolType = function() {
  return /** @type {!proto.agency.v1.Protocol.Type} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.agency.v1.Protocol.Type} value
 * @return {!proto.agency.v1.Notification} returns this
 */
proto.agency.v1.Notification.prototype.setProtocolType = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional Protocol.Role role = 8;
 * @return {!proto.agency.v1.Protocol.Role}
 */
proto.agency.v1.Notification.prototype.getRole = function() {
  return /** @type {!proto.agency.v1.Protocol.Role} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.agency.v1.Protocol.Role} value
 * @return {!proto.agency.v1.Notification} returns this
 */
proto.agency.v1.Notification.prototype.setRole = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional string PID = 9;
 * @return {string}
 */
proto.agency.v1.Notification.prototype.getPid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.Notification} returns this
 */
proto.agency.v1.Notification.prototype.setPid = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.agency.v1.Question.oneofGroups_ = [[3,4]];

/**
 * @enum {number}
 */
proto.agency.v1.Question.QuestionCase = {
  QUESTION_NOT_SET: 0,
  ISSUE_PROPOSE: 3,
  PROOF_VERIFY: 4
};

/**
 * @return {proto.agency.v1.Question.QuestionCase}
 */
proto.agency.v1.Question.prototype.getQuestionCase = function() {
  return /** @type {proto.agency.v1.Question.QuestionCase} */(jspb.Message.computeOneofCase(this, proto.agency.v1.Question.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.v1.Question.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.v1.Question.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.v1.Question} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.Question.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && proto.agency.v1.AgentStatus.toObject(includeInstance, f),
    typeid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    issuePropose: (f = msg.getIssuePropose()) && proto.agency.v1.Question.IssueProposeMsg.toObject(includeInstance, f),
    proofVerify: (f = msg.getProofVerify()) && proto.agency.v1.Question.ProofVerifyMsg.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.v1.Question}
 */
proto.agency.v1.Question.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.v1.Question;
  return proto.agency.v1.Question.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.v1.Question} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.v1.Question}
 */
proto.agency.v1.Question.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.agency.v1.AgentStatus;
      reader.readMessage(value,proto.agency.v1.AgentStatus.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {!proto.agency.v1.Question.Type} */ (reader.readEnum());
      msg.setTypeid(value);
      break;
    case 3:
      var value = new proto.agency.v1.Question.IssueProposeMsg;
      reader.readMessage(value,proto.agency.v1.Question.IssueProposeMsg.deserializeBinaryFromReader);
      msg.setIssuePropose(value);
      break;
    case 4:
      var value = new proto.agency.v1.Question.ProofVerifyMsg;
      reader.readMessage(value,proto.agency.v1.Question.ProofVerifyMsg.deserializeBinaryFromReader);
      msg.setProofVerify(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.v1.Question.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.v1.Question.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.v1.Question} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.Question.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.agency.v1.AgentStatus.serializeBinaryToWriter
    );
  }
  f = message.getTypeid();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getIssuePropose();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.agency.v1.Question.IssueProposeMsg.serializeBinaryToWriter
    );
  }
  f = message.getProofVerify();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.agency.v1.Question.ProofVerifyMsg.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.agency.v1.Question.Type = {
  NONE: 0,
  KEEPALIVE: 1,
  PING_WAITS: 2,
  ISSUE_PROPOSE_WAITS: 3,
  PROOF_PROPOSE_WAITS: 4,
  PROOF_VERIFY_WAITS: 5
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.v1.Question.IssueProposeMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.v1.Question.IssueProposeMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.v1.Question.IssueProposeMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.Question.IssueProposeMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    credDefid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    valuesjson: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.v1.Question.IssueProposeMsg}
 */
proto.agency.v1.Question.IssueProposeMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.v1.Question.IssueProposeMsg;
  return proto.agency.v1.Question.IssueProposeMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.v1.Question.IssueProposeMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.v1.Question.IssueProposeMsg}
 */
proto.agency.v1.Question.IssueProposeMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredDefid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValuesjson(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.v1.Question.IssueProposeMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.v1.Question.IssueProposeMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.v1.Question.IssueProposeMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.Question.IssueProposeMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCredDefid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValuesjson();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string cred_defID = 1;
 * @return {string}
 */
proto.agency.v1.Question.IssueProposeMsg.prototype.getCredDefid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.Question.IssueProposeMsg} returns this
 */
proto.agency.v1.Question.IssueProposeMsg.prototype.setCredDefid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string valuesJSON = 2;
 * @return {string}
 */
proto.agency.v1.Question.IssueProposeMsg.prototype.getValuesjson = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.Question.IssueProposeMsg} returns this
 */
proto.agency.v1.Question.IssueProposeMsg.prototype.setValuesjson = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.agency.v1.Question.ProofVerifyMsg.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.v1.Question.ProofVerifyMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.v1.Question.ProofVerifyMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.v1.Question.ProofVerifyMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.Question.ProofVerifyMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    attributesList: jspb.Message.toObjectList(msg.getAttributesList(),
    proto.agency.v1.Question.ProofVerifyMsg.Attribute.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.v1.Question.ProofVerifyMsg}
 */
proto.agency.v1.Question.ProofVerifyMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.v1.Question.ProofVerifyMsg;
  return proto.agency.v1.Question.ProofVerifyMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.v1.Question.ProofVerifyMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.v1.Question.ProofVerifyMsg}
 */
proto.agency.v1.Question.ProofVerifyMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.agency.v1.Question.ProofVerifyMsg.Attribute;
      reader.readMessage(value,proto.agency.v1.Question.ProofVerifyMsg.Attribute.deserializeBinaryFromReader);
      msg.addAttributes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.v1.Question.ProofVerifyMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.v1.Question.ProofVerifyMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.v1.Question.ProofVerifyMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.Question.ProofVerifyMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAttributesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.agency.v1.Question.ProofVerifyMsg.Attribute.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agency.v1.Question.ProofVerifyMsg.Attribute.prototype.toObject = function(opt_includeInstance) {
  return proto.agency.v1.Question.ProofVerifyMsg.Attribute.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agency.v1.Question.ProofVerifyMsg.Attribute} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.Question.ProofVerifyMsg.Attribute.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    credDefid: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agency.v1.Question.ProofVerifyMsg.Attribute}
 */
proto.agency.v1.Question.ProofVerifyMsg.Attribute.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agency.v1.Question.ProofVerifyMsg.Attribute;
  return proto.agency.v1.Question.ProofVerifyMsg.Attribute.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agency.v1.Question.ProofVerifyMsg.Attribute} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agency.v1.Question.ProofVerifyMsg.Attribute}
 */
proto.agency.v1.Question.ProofVerifyMsg.Attribute.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredDefid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agency.v1.Question.ProofVerifyMsg.Attribute.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agency.v1.Question.ProofVerifyMsg.Attribute.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agency.v1.Question.ProofVerifyMsg.Attribute} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agency.v1.Question.ProofVerifyMsg.Attribute.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCredDefid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string value = 1;
 * @return {string}
 */
proto.agency.v1.Question.ProofVerifyMsg.Attribute.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.Question.ProofVerifyMsg.Attribute} returns this
 */
proto.agency.v1.Question.ProofVerifyMsg.Attribute.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.agency.v1.Question.ProofVerifyMsg.Attribute.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.Question.ProofVerifyMsg.Attribute} returns this
 */
proto.agency.v1.Question.ProofVerifyMsg.Attribute.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string cred_defID = 3;
 * @return {string}
 */
proto.agency.v1.Question.ProofVerifyMsg.Attribute.prototype.getCredDefid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.agency.v1.Question.ProofVerifyMsg.Attribute} returns this
 */
proto.agency.v1.Question.ProofVerifyMsg.Attribute.prototype.setCredDefid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated Attribute attributes = 1;
 * @return {!Array<!proto.agency.v1.Question.ProofVerifyMsg.Attribute>}
 */
proto.agency.v1.Question.ProofVerifyMsg.prototype.getAttributesList = function() {
  return /** @type{!Array<!proto.agency.v1.Question.ProofVerifyMsg.Attribute>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.agency.v1.Question.ProofVerifyMsg.Attribute, 1));
};


/**
 * @param {!Array<!proto.agency.v1.Question.ProofVerifyMsg.Attribute>} value
 * @return {!proto.agency.v1.Question.ProofVerifyMsg} returns this
*/
proto.agency.v1.Question.ProofVerifyMsg.prototype.setAttributesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.agency.v1.Question.ProofVerifyMsg.Attribute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.agency.v1.Question.ProofVerifyMsg.Attribute}
 */
proto.agency.v1.Question.ProofVerifyMsg.prototype.addAttributes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.agency.v1.Question.ProofVerifyMsg.Attribute, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.agency.v1.Question.ProofVerifyMsg} returns this
 */
proto.agency.v1.Question.ProofVerifyMsg.prototype.clearAttributesList = function() {
  return this.setAttributesList([]);
};


/**
 * optional AgentStatus Status = 1;
 * @return {?proto.agency.v1.AgentStatus}
 */
proto.agency.v1.Question.prototype.getStatus = function() {
  return /** @type{?proto.agency.v1.AgentStatus} */ (
    jspb.Message.getWrapperField(this, proto.agency.v1.AgentStatus, 1));
};


/**
 * @param {?proto.agency.v1.AgentStatus|undefined} value
 * @return {!proto.agency.v1.Question} returns this
*/
proto.agency.v1.Question.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.agency.v1.Question} returns this
 */
proto.agency.v1.Question.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agency.v1.Question.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Type typeID = 2;
 * @return {!proto.agency.v1.Question.Type}
 */
proto.agency.v1.Question.prototype.getTypeid = function() {
  return /** @type {!proto.agency.v1.Question.Type} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.agency.v1.Question.Type} value
 * @return {!proto.agency.v1.Question} returns this
 */
proto.agency.v1.Question.prototype.setTypeid = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional IssueProposeMsg issue_propose = 3;
 * @return {?proto.agency.v1.Question.IssueProposeMsg}
 */
proto.agency.v1.Question.prototype.getIssuePropose = function() {
  return /** @type{?proto.agency.v1.Question.IssueProposeMsg} */ (
    jspb.Message.getWrapperField(this, proto.agency.v1.Question.IssueProposeMsg, 3));
};


/**
 * @param {?proto.agency.v1.Question.IssueProposeMsg|undefined} value
 * @return {!proto.agency.v1.Question} returns this
*/
proto.agency.v1.Question.prototype.setIssuePropose = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.agency.v1.Question.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.agency.v1.Question} returns this
 */
proto.agency.v1.Question.prototype.clearIssuePropose = function() {
  return this.setIssuePropose(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agency.v1.Question.prototype.hasIssuePropose = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ProofVerifyMsg proof_verify = 4;
 * @return {?proto.agency.v1.Question.ProofVerifyMsg}
 */
proto.agency.v1.Question.prototype.getProofVerify = function() {
  return /** @type{?proto.agency.v1.Question.ProofVerifyMsg} */ (
    jspb.Message.getWrapperField(this, proto.agency.v1.Question.ProofVerifyMsg, 4));
};


/**
 * @param {?proto.agency.v1.Question.ProofVerifyMsg|undefined} value
 * @return {!proto.agency.v1.Question} returns this
*/
proto.agency.v1.Question.prototype.setProofVerify = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.agency.v1.Question.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.agency.v1.Question} returns this
 */
proto.agency.v1.Question.prototype.clearProofVerify = function() {
  return this.setProofVerify(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agency.v1.Question.prototype.hasProofVerify = function() {
  return jspb.Message.getField(this, 4) != null;
};


goog.object.extend(exports, proto.agency.v1);
